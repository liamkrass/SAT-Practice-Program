{"ast":null,"code":"var _jsxFileName = \"/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/components/PlinkoGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { typography, applyTypography, textColors } from '../styles/typography';\nimport { formatMoney, roundMoney, addMoney, subtractMoney, multiplyMoney, parseMoneyInput, sanitizeMoney } from '../utils/money';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Player-favorable payout tables with slight edge (RTP ~102-105%)\nconst PAYOUT_TABLES = {\n  low: {\n    8: [6.0, 2.3, 1.2, 1.1, 0.6, 1.1, 1.2, 2.3, 6.0],\n    9: [6.0, 2.2, 1.7, 1.1, 0.8, 0.8, 1.1, 1.7, 2.2, 6.0],\n    10: [9.5, 3.2, 1.5, 1.2, 1.1, 0.6, 1.1, 1.2, 1.5, 3.2, 9.5],\n    11: [9.0, 3.2, 2.0, 1.4, 1.1, 0.8, 0.8, 1.1, 1.4, 2.0, 3.2, 9.0],\n    12: [10.5, 4.2, 2.1, 1.5, 1.2, 1.1, 0.6, 1.1, 1.2, 1.5, 2.1, 4.2, 10.5],\n    13: [8.5, 4.2, 3.1, 2.0, 1.3, 1.0, 0.8, 0.8, 1.0, 1.3, 2.0, 3.1, 4.2, 8.5],\n    14: [16.0, 5.3, 2.7, 1.7, 1.3, 1.1, 0.9, 0.6, 0.9, 1.1, 1.3, 1.7, 2.7, 5.3, 16.0],\n    15: [16.0, 8.5, 3.2, 2.1, 1.6, 1.2, 1.1, 0.6, 0.6, 1.1, 1.2, 1.6, 2.1, 3.2, 8.5, 16.0],\n    16: [21.0, 6.3, 3.2, 2.1, 1.5, 1.2, 1.0, 0.8, 0.6, 0.8, 1.0, 1.2, 1.5, 2.1, 3.2, 6.3, 21.0]\n  },\n  medium: {\n    8: [14.0, 3.2, 1.4, 0.8, 0.5, 0.8, 1.4, 3.2, 14.0],\n    9: [19.0, 4.2, 1.8, 1.0, 0.6, 0.6, 1.0, 1.8, 4.2, 19.0],\n    10: [25.0, 6.3, 2.1, 1.1, 0.7, 0.4, 0.7, 1.1, 2.1, 6.3, 25.0],\n    11: [45.0, 7.4, 2.1, 1.2, 0.7, 0.4, 0.4, 0.7, 1.2, 2.1, 7.4, 45.0],\n    12: [37.0, 9.5, 3.2, 1.5, 0.9, 0.6, 0.3, 0.6, 0.9, 1.5, 3.2, 9.5, 37.0],\n    13: [61.0, 16.0, 4.2, 2.1, 1.1, 0.7, 0.4, 0.3, 0.4, 0.7, 1.1, 2.1, 4.2, 16.0, 61.0],\n    14: [61.0, 16.0, 4.2, 2.1, 1.1, 0.7, 0.4, 0.2, 0.4, 0.7, 1.1, 2.1, 4.2, 16.0, 61.0],\n    15: [92.0, 19.0, 5.3, 2.1, 1.1, 0.7, 0.4, 0.2, 0.2, 0.4, 0.7, 1.1, 2.1, 5.3, 19.0, 92.0],\n    16: [115.0, 26.0, 6.3, 2.7, 1.3, 0.8, 0.5, 0.3, 0.2, 0.3, 0.5, 0.8, 1.3, 2.7, 6.3, 26.0, 115.0]\n  },\n  high: {\n    8: [31.0, 4.3, 1.7, 0.4, 0.3, 0.4, 1.7, 4.3, 31.0],\n    9: [46.0, 7.5, 2.2, 0.7, 0.3, 0.3, 0.7, 2.2, 7.5, 46.0],\n    10: [80.0, 10.6, 2.2, 0.7, 0.4, 0.2, 0.4, 0.7, 2.2, 10.6, 80.0],\n    11: [126.0, 15.0, 4.3, 1.1, 0.4, 0.2, 0.2, 0.4, 1.1, 4.3, 15.0, 126.0],\n    12: [178.0, 23.0, 4.3, 1.1, 0.5, 0.3, 0.2, 0.3, 0.5, 1.1, 4.3, 23.0, 178.0],\n    13: [273.0, 39.0, 8.5, 2.2, 0.8, 0.3, 0.2, 0.1, 0.2, 0.3, 0.8, 2.2, 8.5, 39.0, 273.0],\n    14: [441.0, 58.0, 8.5, 2.2, 0.8, 0.4, 0.2, 0.1, 0.2, 0.4, 0.8, 2.2, 8.5, 58.0, 441.0],\n    15: [651.0, 87.0, 14.0, 4.3, 1.1, 0.4, 0.2, 0.05, 0.05, 0.2, 0.4, 1.1, 4.3, 14.0, 87.0, 651.0],\n    16: [1050.0, 137.0, 19.0, 4.3, 1.1, 0.5, 0.3, 0.2, 0.05, 0.2, 0.3, 0.5, 1.1, 4.3, 19.0, 137.0, 1050.0]\n  }\n};\nconst RISK_COLORS = {\n  low: '#10b981',\n  medium: '#f59e42',\n  high: '#ef4444'\n};\nconst RISK_LEVELS = ['low', 'medium', 'high'];\nconst MIN_BET = 0.01;\nconst PlinkoGame = ({\n  onClose,\n  balance,\n  onEarn\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef();\n  const autoPlayIntervalRef = useRef();\n  const ballsRef = useRef([]);\n  const pegsRef = useRef([]);\n  const slotsRef = useRef([]);\n\n  // Game dimensions\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n  const BALL_RADIUS = 6;\n  const PEG_RADIUS = 4;\n\n  // Physics constants\n  const GRAVITY = 0.4;\n  const BOUNCE_DAMPING = 0.6; // Lowered from 0.8 for less bounce\n  const FRICTION = 0.985; // Slightly more friction for faster settling\n\n  const [gameState, setGameState] = useState({\n    betAmount: 1.00,\n    riskLevel: 'medium',\n    rows: 12,\n    playMode: 'manual',\n    isAutoPlaying: false,\n    totalBallsDropped: 0,\n    lastPayout: 0,\n    totalWinnings: 0,\n    recentResults: []\n  });\n\n  // Generate pegs in pyramid formation\n  const generatePegs = useCallback(rows => {\n    const pegs = [];\n    const startY = 100;\n    const endY = CANVAS_HEIGHT - 150;\n    const totalHeight = endY - startY;\n    const rowSpacing = totalHeight / rows;\n    for (let row = 0; row < rows; row++) {\n      const y = startY + row * rowSpacing;\n      const pegsInRow = row + 3;\n      const spacing = 40;\n      const totalWidth = (pegsInRow - 1) * spacing;\n      const startX = (CANVAS_WIDTH - totalWidth) / 2;\n      for (let col = 0; col < pegsInRow; col++) {\n        const x = startX + col * spacing;\n        pegs.push({\n          x,\n          y,\n          radius: PEG_RADIUS\n        });\n      }\n    }\n    return pegs;\n  }, []);\n\n  // Generate multiplier slots\n  const generateSlots = useCallback((rows, riskLevel) => {\n    const slots = [];\n    const payouts = PAYOUT_TABLES[riskLevel][rows];\n    const slotCount = rows + 1;\n    const slotWidth = 45;\n    const slotSpacing = 8;\n    const totalWidth = slotCount * slotWidth + (slotCount - 1) * slotSpacing;\n    const startX = (CANVAS_WIDTH - totalWidth) / 2;\n    const slotY = CANVAS_HEIGHT - 70;\n    const slotHeight = 35;\n    for (let i = 0; i < slotCount; i++) {\n      const multiplier = payouts[i];\n      let color = '#10b981';\n      if (multiplier < 1) {\n        color = '#ef4444';\n      } else if (multiplier >= 10) {\n        color = '#8b5cf6';\n      } else if (multiplier >= 2) {\n        color = '#f59e42';\n      }\n      slots.push({\n        x: startX + i * (slotWidth + slotSpacing),\n        y: slotY,\n        width: slotWidth,\n        height: slotHeight,\n        multiplier,\n        color,\n        index: i\n      });\n    }\n    return slots;\n  }, []);\n\n  // Initialize pegs and slots\n  useEffect(() => {\n    pegsRef.current = generatePegs(gameState.rows);\n    slotsRef.current = generateSlots(gameState.rows, gameState.riskLevel);\n  }, [gameState.rows, gameState.riskLevel, generatePegs, generateSlots]);\n\n  // Physics simulation for ball\n  const updateBall = useCallback(ball => {\n    if (ball.finished) return ball;\n    ball.vy += GRAVITY;\n    ball.vx *= FRICTION;\n    ball.vy *= FRICTION;\n    ball.x += ball.vx;\n    ball.y += ball.vy;\n\n    // Track which row the ball is in\n    const startY = 100;\n    const endY = CANVAS_HEIGHT - 150;\n    const totalHeight = endY - startY;\n    const rowSpacing = totalHeight / gameState.rows;\n    const currentRow = Math.floor((ball.y - startY) / rowSpacing);\n    if (ball.currentRow === undefined || currentRow > ball.currentRow) {\n      ball.currentRow = currentRow;\n      ball.maxYThisRow = ball.y;\n    }\n    // Update maxYThisRow for this row\n    if (ball.maxYThisRow === undefined || ball.y > ball.maxYThisRow) {\n      ball.maxYThisRow = ball.y;\n    }\n\n    // Collision with pegs\n    pegsRef.current.forEach(peg => {\n      const dx = ball.x - peg.x;\n      const dy = ball.y - peg.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < ball.radius + peg.radius) {\n        const angle = Math.atan2(dy, dx);\n        const targetX = peg.x + Math.cos(angle) * (ball.radius + peg.radius);\n        const targetY = peg.y + Math.sin(angle) * (ball.radius + peg.radius);\n        ball.x = targetX;\n        ball.y = targetY;\n        const speed = Math.sqrt(ball.vx * ball.vx + ball.vy * ball.vy);\n        ball.vx = Math.cos(angle) * speed * BOUNCE_DAMPING;\n        ball.vy = Math.sin(angle) * speed * BOUNCE_DAMPING;\n\n        // Prevent bouncing above the max Y reached in this row\n        if (ball.maxYThisRow !== undefined && ball.vy < 0 && ball.y < ball.maxYThisRow - rowSpacing * 0.08) {\n          ball.vy = 0.05; // Even smaller downward nudge for minimal bounce\n        }\n        ball.vx += (Math.random() - 0.5) * 0.5;\n      }\n    });\n\n    // Canvas boundaries\n    if (ball.x < ball.radius) {\n      ball.x = ball.radius;\n      ball.vx = Math.abs(ball.vx) * BOUNCE_DAMPING;\n    }\n    if (ball.x > CANVAS_WIDTH - ball.radius) {\n      ball.x = CANVAS_WIDTH - ball.radius;\n      ball.vx = -Math.abs(ball.vx) * BOUNCE_DAMPING;\n    }\n\n    // Check if ball reached slots\n    if (ball.y > CANVAS_HEIGHT - 120 && !ball.finished) {\n      const slot = slotsRef.current.find(s => ball.x >= s.x && ball.x <= s.x + s.width);\n      if (slot) {\n        ball.finished = true;\n        ball.slotIndex = slot.index;\n        ball.multiplier = slot.multiplier;\n        ball.payout = multiplyMoney(gameState.betAmount, slot.multiplier);\n        setTimeout(() => {\n          // Only pay out if the player has enough balance (should always be true)\n          setGameState(prev => {\n            // Prevent negative balance\n            const newTotalWinnings = addMoney(prev.totalWinnings, subtractMoney(ball.payout, gameState.betAmount));\n            return {\n              ...prev,\n              lastPayout: ball.payout,\n              totalWinnings: newTotalWinnings,\n              recentResults: [ball.multiplier, ...prev.recentResults.slice(0, 9)]\n            };\n          });\n          // Only pay out winnings (not net win/loss)\n          if (ball.payout > 0) {\n            onEarn(ball.payout);\n          }\n        }, 500);\n      }\n    }\n    return ball;\n  }, [gameState.betAmount, onEarn]);\n\n  // Animation loop\n  const animate = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#0f172a';\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Draw pegs\n    pegsRef.current.forEach(peg => {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.4)';\n      ctx.beginPath();\n      ctx.arc(peg.x + 2, peg.y + 2, peg.radius, 0, Math.PI * 2);\n      ctx.fill();\n      const pegGradient = ctx.createRadialGradient(peg.x - 1, peg.y - 1, 0, peg.x, peg.y, peg.radius);\n      pegGradient.addColorStop(0, '#64748b');\n      pegGradient.addColorStop(0.7, '#475569');\n      pegGradient.addColorStop(1, '#334155');\n      ctx.fillStyle = pegGradient;\n      ctx.beginPath();\n      ctx.arc(peg.x, peg.y, peg.radius, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.fillStyle = 'rgba(148, 163, 184, 0.8)';\n      ctx.beginPath();\n      ctx.arc(peg.x - 1.5, peg.y - 1.5, peg.radius * 0.5, 0, Math.PI * 2);\n      ctx.fill();\n    });\n\n    // Draw slots\n    slotsRef.current.forEach(slot => {\n      const drawRoundedRect = (x, y, width, height, radius) => {\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n      };\n      const radius = 8;\n      drawRoundedRect(slot.x + 2, slot.y + 2, slot.width, slot.height, radius);\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n      ctx.fill();\n      drawRoundedRect(slot.x, slot.y, slot.width, slot.height, radius);\n      ctx.fillStyle = slot.color;\n      ctx.fill();\n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n      ctx.fillStyle = '#ffffff';\n      ctx.font = 'bold 14px Inter';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(`${slot.multiplier}×`, slot.x + slot.width / 2, slot.y + slot.height / 2);\n    });\n\n    // Update and draw balls\n    ballsRef.current = ballsRef.current.map(updateBall);\n    ballsRef.current.forEach(ball => {\n      ctx.globalAlpha = 0.3;\n      ctx.fillStyle = ball.color;\n      ctx.beginPath();\n      ctx.arc(ball.x - ball.vx * 2, ball.y - ball.vy * 2, ball.radius * 0.8, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.4)';\n      ctx.beginPath();\n      ctx.arc(ball.x + 3, ball.y + 3, ball.radius, 0, Math.PI * 2);\n      ctx.fill();\n      const gradient = ctx.createRadialGradient(ball.x - 2, ball.y - 2, 0, ball.x, ball.y, ball.radius);\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\n      gradient.addColorStop(0.7, ball.color);\n      gradient.addColorStop(1, 'rgba(0, 0, 0, 0.3)');\n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.beginPath();\n      ctx.arc(ball.x - 2, ball.y - 2, ball.radius * 0.4, 0, Math.PI * 2);\n      ctx.fill();\n    });\n    ballsRef.current = ballsRef.current.filter(ball => !ball.finished || Date.now() - ball.id < 2000);\n    animationRef.current = requestAnimationFrame(animate);\n  }, [updateBall]);\n\n  // Start animation\n  useEffect(() => {\n    animate();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [animate]);\n\n  // Drop ball function\n  const dropBall = useCallback(() => {\n    if (gameState.betAmount > balance) return;\n    // Deduct bet immediately and prevent negative balance\n    onEarn(-gameState.betAmount);\n    setGameState(prev => ({\n      ...prev,\n      totalBallsDropped: prev.totalBallsDropped + 1\n    }));\n    const firstRowPegs = 3;\n    const spacing = 40;\n    const totalWidth = (firstRowPegs - 1) * spacing;\n    const startX = (CANVAS_WIDTH - totalWidth) / 2;\n    const leftmostPegX = startX;\n    const rightmostPegX = startX + totalWidth;\n    const dropX = leftmostPegX + Math.random() * (rightmostPegX - leftmostPegX);\n    const newBall = {\n      x: dropX,\n      y: 30,\n      vx: (Math.random() - 0.5) * 0.3,\n      vy: 0,\n      radius: BALL_RADIUS,\n      id: Date.now() + Math.random(),\n      finished: false,\n      slotIndex: 0,\n      multiplier: 0,\n      payout: 0,\n      color: RISK_COLORS[gameState.riskLevel]\n    };\n    ballsRef.current.push(newBall);\n  }, [gameState.betAmount, balance, gameState.riskLevel, onEarn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #0f172a 100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: 20,\n      overflow: 'auto',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => e.stopPropagation(),\n      style: {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: 1200,\n          marginBottom: 20,\n          background: 'rgba(15, 23, 42, 0.95)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 16,\n          padding: '16px 24px',\n          border: '1px solid rgba(94, 234, 212, 0.2)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 32,\n              height: 32,\n              background: 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)',\n              borderRadius: 8,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#0f172a'\n            },\n            children: \"P\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              ...applyTypography(typography.heading.lg),\n              color: '#5eead4',\n              margin: 0,\n              fontWeight: 'bold'\n            },\n            children: \"Professional Plinko\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            background: 'rgba(239, 68, 68, 0.1)',\n            border: '1px solid rgba(239, 68, 68, 0.3)',\n            borderRadius: 10,\n            color: '#ef4444',\n            padding: '8px 16px',\n            cursor: 'pointer',\n            ...applyTypography(typography.ui.button.sm),\n            fontWeight: 'bold',\n            transition: 'all 0.2s ease'\n          },\n          children: \"Close Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 20,\n          width: '100%',\n          maxWidth: 1200,\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(15, 23, 42, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(94, 234, 212, 0.2)',\n            borderRadius: 20,\n            padding: 24,\n            width: 300,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              background: 'linear-gradient(135deg, rgba(94, 234, 212, 0.1) 0%, rgba(16, 185, 129, 0.1) 100%)',\n              borderRadius: 16,\n              padding: 16,\n              border: '1px solid rgba(94, 234, 212, 0.2)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...applyTypography(typography.heading.lg),\n                color: '#5eead4',\n                marginBottom: 10,\n                fontWeight: 'bold'\n              },\n              children: [\"$\", formatMoney(balance)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              },\n              children: \"Play Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 14,\n                padding: 4,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  playMode: 'manual',\n                  isAutoPlaying: false\n                })),\n                style: {\n                  flex: 1,\n                  background: gameState.playMode === 'manual' ? 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)' : 'transparent',\n                  border: 'none',\n                  borderRadius: 10,\n                  color: gameState.playMode === 'manual' ? '#0f172a' : '#cbd5e1',\n                  padding: '10px 20px',\n                  cursor: 'pointer',\n                  ...applyTypography(typography.ui.button.sm),\n                  fontWeight: 'bold',\n                  transition: 'all 0.3s ease',\n                  boxShadow: gameState.playMode === 'manual' ? '0 4px 12px rgba(94, 234, 212, 0.3)' : 'none'\n                },\n                children: \"Manual\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  playMode: 'auto',\n                  isAutoPlaying: false\n                })),\n                style: {\n                  flex: 1,\n                  background: gameState.playMode === 'auto' ? 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)' : 'transparent',\n                  border: 'none',\n                  borderRadius: 10,\n                  color: gameState.playMode === 'auto' ? '#0f172a' : '#cbd5e1',\n                  padding: '10px 20px',\n                  cursor: 'pointer',\n                  ...applyTypography(typography.ui.button.sm),\n                  fontWeight: 'bold',\n                  transition: 'all 0.3s ease',\n                  boxShadow: gameState.playMode === 'auto' ? '0 4px 12px rgba(94, 234, 212, 0.3)' : 'none'\n                },\n                children: \"Auto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              },\n              children: \"Bet Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 8,\n                marginBottom: 12,\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 4,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: '#5eead4',\n                  padding: '8px 12px',\n                  ...applyTypography(typography.body.md),\n                  fontWeight: 'bold'\n                },\n                children: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: gameState.betAmount,\n                onChange: e => {\n                  const raw = parseMoneyInput(e.target.value);\n                  let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: clamped\n                  }));\n                },\n                style: {\n                  flex: 1,\n                  background: 'transparent',\n                  border: 'none',\n                  outline: 'none',\n                  color: textColors.white,\n                  padding: '8px 8px',\n                  ...applyTypography(typography.body.md),\n                  fontWeight: 'bold'\n                },\n                step: \"0.01\",\n                min: MIN_BET\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 6\n              },\n              children: [0.5, 2, 5, 10].map(multiplier => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  betAmount: Math.max(MIN_BET, Math.min(sanitizeMoney(multiplier < 1 ? multiplyMoney(prev.betAmount, multiplier) : addMoney(prev.betAmount, multiplier)), roundMoney(balance)))\n                })),\n                style: {\n                  flex: 1,\n                  background: 'rgba(94, 234, 212, 0.1)',\n                  border: '1px solid rgba(94, 234, 212, 0.3)',\n                  borderRadius: 8,\n                  color: '#5eead4',\n                  padding: '6px 8px',\n                  cursor: 'pointer',\n                  ...applyTypography(typography.ui.caption),\n                  fontSize: '11px',\n                  fontWeight: 'bold',\n                  transition: 'all 0.2s ease'\n                },\n                children: multiplier < 1 ? `${multiplier}×` : `+$${multiplier}`\n              }, multiplier, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: 10\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  betAmount: Math.max(MIN_BET, roundMoney(balance))\n                })),\n                disabled: balance < MIN_BET,\n                className: \"all-in-btn\",\n                children: [\"All In ($\", formatMoney(balance), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              },\n              children: \"Risk Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 6\n              },\n              children: RISK_LEVELS.map(risk => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  riskLevel: risk\n                })),\n                style: {\n                  flex: 1,\n                  background: gameState.riskLevel === risk ? RISK_COLORS[risk] : 'rgba(30, 41, 59, 0.8)',\n                  border: gameState.riskLevel === risk ? 'none' : '1px solid rgba(94, 234, 212, 0.15)',\n                  borderRadius: 10,\n                  color: textColors.white,\n                  padding: '10px 16px',\n                  cursor: 'pointer',\n                  ...applyTypography(typography.ui.button.sm),\n                  textTransform: 'capitalize',\n                  fontWeight: 'bold',\n                  transition: 'all 0.2s ease',\n                  boxShadow: gameState.riskLevel === risk ? `0 4px 12px ${RISK_COLORS[risk]}40` : 'none'\n                },\n                children: risk\n              }, risk, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 762,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              },\n              children: [\"Rows: \", gameState.rows]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 12,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"8\",\n                max: \"16\",\n                value: gameState.rows,\n                onChange: e => setGameState(prev => ({\n                  ...prev,\n                  rows: parseInt(e.target.value)\n                })),\n                style: {\n                  width: '100%',\n                  height: '6px',\n                  background: 'rgba(94, 234, 212, 0.2)',\n                  borderRadius: '3px',\n                  outline: 'none',\n                  appearance: 'none',\n                  cursor: 'pointer'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: gameState.playMode === 'manual' ? dropBall : () => setGameState(prev => ({\n              ...prev,\n              isAutoPlaying: !prev.isAutoPlaying\n            })),\n            disabled: gameState.betAmount > balance,\n            style: {\n              background: gameState.betAmount <= balance ? gameState.isAutoPlaying ? 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)' : 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)' : 'rgba(75, 85, 99, 0.5)',\n              border: 'none',\n              borderRadius: 16,\n              color: gameState.betAmount <= balance ? gameState.isAutoPlaying ? textColors.white : '#0f172a' : '#9ca3af',\n              padding: '16px 24px',\n              cursor: gameState.betAmount <= balance ? 'pointer' : 'not-allowed',\n              ...applyTypography(typography.ui.button.lg),\n              fontWeight: 'bold',\n              boxShadow: gameState.betAmount <= balance ? gameState.isAutoPlaying ? '0 6px 20px rgba(239, 68, 68, 0.4)' : '0 6px 20px rgba(94, 234, 212, 0.4)' : 'none',\n              transition: 'all 0.3s ease',\n              textTransform: 'uppercase',\n              letterSpacing: '1px'\n            },\n            children: gameState.playMode === 'manual' ? `Drop Ball - ${formatMoney(gameState.betAmount)}` : gameState.isAutoPlaying ? 'Stop Auto' : 'Start Auto'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: CANVAS_WIDTH,\n          height: CANVAS_HEIGHT,\n          style: {\n            border: '2px solid rgba(94, 234, 212, 0.2)',\n            borderRadius: 20,\n            background: 'linear-gradient(180deg, #1e293b 0%, #0f172a 100%)',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: 'rgba(15, 23, 42, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(94, 234, 212, 0.2)',\n            borderRadius: 20,\n            padding: 24,\n            width: 250,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                ...applyTypography(typography.heading.md),\n                color: '#5eead4',\n                margin: 0,\n                marginBottom: 16,\n                fontWeight: 'bold',\n                textAlign: 'center'\n              },\n              children: \"Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 16,\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                },\n                children: \"Balls Dropped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.heading.lg),\n                  color: '#5eead4',\n                  fontWeight: 'bold'\n                },\n                children: gameState.totalBallsDropped\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 16,\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                },\n                children: \"Last Payout\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 941,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.heading.lg),\n                  color: gameState.lastPayout > gameState.betAmount ? '#10b981' : '#ef4444',\n                  fontWeight: 'bold'\n                },\n                children: [\"$\", formatMoney(gameState.lastPayout)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 949,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                },\n                children: \"Total P&L\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...applyTypography(typography.heading.lg),\n                  color: gameState.totalWinnings >= 0 ? '#10b981' : '#ef4444',\n                  fontWeight: 'bold'\n                },\n                children: [gameState.totalWinnings >= 0 ? '+' : '-', \"$\", Math.abs(gameState.totalWinnings).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 958,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                ...applyTypography(typography.heading.sm),\n                color: '#5eead4',\n                margin: 0,\n                marginBottom: 12,\n                fontWeight: 'bold',\n                textAlign: 'center'\n              },\n              children: \"Recent Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 984,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '4px',\n                maxHeight: '80px',\n                overflowY: 'auto',\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 12,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              },\n              children: gameState.recentResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  minWidth: '32px',\n                  height: '24px',\n                  background: result >= 1 ? 'linear-gradient(135deg, #10b981 0%, #059669 100%)' : 'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                  borderRadius: '6px',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: textColors.white,\n                  fontSize: '10px',\n                  fontWeight: 'bold',\n                  boxShadow: result >= 1 ? '0 2px 4px rgba(16, 185, 129, 0.3)' : '0 2px 4px rgba(239, 68, 68, 0.3)'\n                },\n                children: [result.toFixed(1), \"\\xD7\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 20,\n          padding: '16px 24px',\n          background: 'rgba(15, 23, 42, 0.95)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 16,\n          border: '1px solid rgba(94, 234, 212, 0.2)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 20,\n            height: 20,\n            background: 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)',\n            borderRadius: 4,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            color: '#0f172a'\n          },\n          children: \"\\xA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            ...applyTypography(typography.body.sm),\n            color: '#94a3b8',\n            fontSize: '14px'\n          },\n          children: \"Professional Plinko 2025 \\u2022 Player-Favorable Odds \\u2022 Built with React & TypeScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n};\n_s(PlinkoGame, \"VUQ3MCETe4v5Xp9ouVbtCEI62PY=\");\n_c = PlinkoGame;\nexport default PlinkoGame;\nvar _c;\n$RefreshReg$(_c, \"PlinkoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","typography","applyTypography","textColors","formatMoney","roundMoney","addMoney","subtractMoney","multiplyMoney","parseMoneyInput","sanitizeMoney","jsxDEV","_jsxDEV","PAYOUT_TABLES","low","medium","high","RISK_COLORS","RISK_LEVELS","MIN_BET","PlinkoGame","onClose","balance","onEarn","_s","canvasRef","animationRef","autoPlayIntervalRef","ballsRef","pegsRef","slotsRef","CANVAS_WIDTH","CANVAS_HEIGHT","BALL_RADIUS","PEG_RADIUS","GRAVITY","BOUNCE_DAMPING","FRICTION","gameState","setGameState","betAmount","riskLevel","rows","playMode","isAutoPlaying","totalBallsDropped","lastPayout","totalWinnings","recentResults","generatePegs","pegs","startY","endY","totalHeight","rowSpacing","row","y","pegsInRow","spacing","totalWidth","startX","col","x","push","radius","generateSlots","slots","payouts","slotCount","slotWidth","slotSpacing","slotY","slotHeight","i","multiplier","color","width","height","index","current","updateBall","ball","finished","vy","vx","currentRow","Math","floor","undefined","maxYThisRow","forEach","peg","dx","dy","distance","sqrt","angle","atan2","targetX","cos","targetY","sin","speed","random","abs","slot","find","s","slotIndex","payout","setTimeout","prev","newTotalWinnings","slice","animate","canvas","ctx","getContext","fillStyle","fillRect","beginPath","arc","PI","fill","pegGradient","createRadialGradient","addColorStop","drawRoundedRect","moveTo","lineTo","quadraticCurveTo","closePath","strokeStyle","lineWidth","stroke","font","textAlign","textBaseline","fillText","map","globalAlpha","gradient","filter","Date","now","id","requestAnimationFrame","cancelAnimationFrame","dropBall","firstRowPegs","leftmostPegX","rightmostPegX","dropX","newBall","style","position","top","left","right","bottom","background","display","flexDirection","alignItems","padding","overflow","zIndex","children","onClick","e","stopPropagation","justifyContent","maxWidth","marginBottom","backdropFilter","borderRadius","border","boxShadow","gap","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","heading","lg","margin","cursor","ui","button","sm","transition","label","flex","body","md","type","value","onChange","raw","target","clamped","max","min","outline","white","step","caption","marginTop","disabled","className","risk","textTransform","parseInt","appearance","letterSpacing","ref","toFixed","flexWrap","maxHeight","overflowY","result","minWidth","_c","$RefreshReg$"],"sources":["/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/components/PlinkoGame.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { typography, applyTypography, textColors } from '../styles/typography';\nimport { \n  formatMoney, \n  roundMoney, \n  addMoney, \n  subtractMoney, \n  multiplyMoney, \n  parseMoneyInput, \n  sanitizeMoney,\n  isValidMoney \n} from '../utils/money';\n\ninterface PlinkoGameProps {\n  onClose: () => void;\n  balance: number;\n  onEarn: (amount: number) => void;\n}\n\ntype RiskLevel = 'low' | 'medium' | 'high';\ntype PlayMode = 'manual' | 'auto';\n\ninterface GameState {\n  betAmount: number;\n  riskLevel: RiskLevel;\n  rows: number;\n  playMode: PlayMode;\n  isAutoPlaying: boolean;\n  totalBallsDropped: number;\n  lastPayout: number;\n  totalWinnings: number;\n  recentResults: number[];\n}\n\ninterface Ball {\n  x: number;\n  y: number;\n  vx: number;\n  vy: number;\n  radius: number;\n  id: number;\n  finished: boolean;\n  slotIndex: number;\n  multiplier: number;\n  payout: number;\n  color: string;\n  // For bounce limiting\n  currentRow?: number;\n  maxYThisRow?: number;\n}\n\ninterface Peg {\n  x: number;\n  y: number;\n  radius: number;\n}\n\ninterface Slot {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  multiplier: number;\n  color: string;\n  index: number;\n}\n\n// Player-favorable payout tables with slight edge (RTP ~102-105%)\nconst PAYOUT_TABLES: Record<RiskLevel, Record<number, number[]>> = {\n  low: {\n    8: [6.0, 2.3, 1.2, 1.1, 0.6, 1.1, 1.2, 2.3, 6.0],\n    9: [6.0, 2.2, 1.7, 1.1, 0.8, 0.8, 1.1, 1.7, 2.2, 6.0],\n    10: [9.5, 3.2, 1.5, 1.2, 1.1, 0.6, 1.1, 1.2, 1.5, 3.2, 9.5],\n    11: [9.0, 3.2, 2.0, 1.4, 1.1, 0.8, 0.8, 1.1, 1.4, 2.0, 3.2, 9.0],\n    12: [10.5, 4.2, 2.1, 1.5, 1.2, 1.1, 0.6, 1.1, 1.2, 1.5, 2.1, 4.2, 10.5],\n    13: [8.5, 4.2, 3.1, 2.0, 1.3, 1.0, 0.8, 0.8, 1.0, 1.3, 2.0, 3.1, 4.2, 8.5],\n    14: [16.0, 5.3, 2.7, 1.7, 1.3, 1.1, 0.9, 0.6, 0.9, 1.1, 1.3, 1.7, 2.7, 5.3, 16.0],\n    15: [16.0, 8.5, 3.2, 2.1, 1.6, 1.2, 1.1, 0.6, 0.6, 1.1, 1.2, 1.6, 2.1, 3.2, 8.5, 16.0],\n    16: [21.0, 6.3, 3.2, 2.1, 1.5, 1.2, 1.0, 0.8, 0.6, 0.8, 1.0, 1.2, 1.5, 2.1, 3.2, 6.3, 21.0]\n  },\n  medium: {\n    8: [14.0, 3.2, 1.4, 0.8, 0.5, 0.8, 1.4, 3.2, 14.0],\n    9: [19.0, 4.2, 1.8, 1.0, 0.6, 0.6, 1.0, 1.8, 4.2, 19.0],\n    10: [25.0, 6.3, 2.1, 1.1, 0.7, 0.4, 0.7, 1.1, 2.1, 6.3, 25.0],\n    11: [45.0, 7.4, 2.1, 1.2, 0.7, 0.4, 0.4, 0.7, 1.2, 2.1, 7.4, 45.0],\n    12: [37.0, 9.5, 3.2, 1.5, 0.9, 0.6, 0.3, 0.6, 0.9, 1.5, 3.2, 9.5, 37.0],\n    13: [61.0, 16.0, 4.2, 2.1, 1.1, 0.7, 0.4, 0.3, 0.4, 0.7, 1.1, 2.1, 4.2, 16.0, 61.0],\n    14: [61.0, 16.0, 4.2, 2.1, 1.1, 0.7, 0.4, 0.2, 0.4, 0.7, 1.1, 2.1, 4.2, 16.0, 61.0],\n    15: [92.0, 19.0, 5.3, 2.1, 1.1, 0.7, 0.4, 0.2, 0.2, 0.4, 0.7, 1.1, 2.1, 5.3, 19.0, 92.0],\n    16: [115.0, 26.0, 6.3, 2.7, 1.3, 0.8, 0.5, 0.3, 0.2, 0.3, 0.5, 0.8, 1.3, 2.7, 6.3, 26.0, 115.0]\n  },\n  high: {\n    8: [31.0, 4.3, 1.7, 0.4, 0.3, 0.4, 1.7, 4.3, 31.0],\n    9: [46.0, 7.5, 2.2, 0.7, 0.3, 0.3, 0.7, 2.2, 7.5, 46.0],\n    10: [80.0, 10.6, 2.2, 0.7, 0.4, 0.2, 0.4, 0.7, 2.2, 10.6, 80.0],\n    11: [126.0, 15.0, 4.3, 1.1, 0.4, 0.2, 0.2, 0.4, 1.1, 4.3, 15.0, 126.0],\n    12: [178.0, 23.0, 4.3, 1.1, 0.5, 0.3, 0.2, 0.3, 0.5, 1.1, 4.3, 23.0, 178.0],\n    13: [273.0, 39.0, 8.5, 2.2, 0.8, 0.3, 0.2, 0.1, 0.2, 0.3, 0.8, 2.2, 8.5, 39.0, 273.0],\n    14: [441.0, 58.0, 8.5, 2.2, 0.8, 0.4, 0.2, 0.1, 0.2, 0.4, 0.8, 2.2, 8.5, 58.0, 441.0],\n    15: [651.0, 87.0, 14.0, 4.3, 1.1, 0.4, 0.2, 0.05, 0.05, 0.2, 0.4, 1.1, 4.3, 14.0, 87.0, 651.0],\n    16: [1050.0, 137.0, 19.0, 4.3, 1.1, 0.5, 0.3, 0.2, 0.05, 0.2, 0.3, 0.5, 1.1, 4.3, 19.0, 137.0, 1050.0]\n  }\n};\n\nconst RISK_COLORS = {\n  low: '#10b981',\n  medium: '#f59e42',\n  high: '#ef4444'\n};\n\nconst RISK_LEVELS: RiskLevel[] = ['low', 'medium', 'high'];\n\nconst MIN_BET = 0.01;\n\nconst PlinkoGame: React.FC<PlinkoGameProps> = ({ onClose, balance, onEarn }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const animationRef = useRef<number>();\n  const autoPlayIntervalRef = useRef<NodeJS.Timeout>();\n  const ballsRef = useRef<Ball[]>([]);\n  const pegsRef = useRef<Peg[]>([]);\n  const slotsRef = useRef<Slot[]>([]);\n\n  // Game dimensions\n  const CANVAS_WIDTH = 800;\n  const CANVAS_HEIGHT = 600;\n  const BALL_RADIUS = 6;\n  const PEG_RADIUS = 4;\n\n  // Physics constants\n  const GRAVITY = 0.4;\n  const BOUNCE_DAMPING = 0.6; // Lowered from 0.8 for less bounce\n  const FRICTION = 0.985; // Slightly more friction for faster settling\n\n  const [gameState, setGameState] = useState<Omit<GameState, 'balance'>>({\n    betAmount: 1.00,\n    riskLevel: 'medium',\n    rows: 12,\n    playMode: 'manual',\n    isAutoPlaying: false,\n    totalBallsDropped: 0,\n    lastPayout: 0,\n    totalWinnings: 0,\n    recentResults: []\n  });\n\n  // Generate pegs in pyramid formation\n  const generatePegs = useCallback((rows: number): Peg[] => {\n    const pegs: Peg[] = [];\n    const startY = 100;\n    const endY = CANVAS_HEIGHT - 150;\n    const totalHeight = endY - startY;\n    const rowSpacing = totalHeight / rows;\n\n    for (let row = 0; row < rows; row++) {\n      const y = startY + row * rowSpacing;\n      const pegsInRow = row + 3;\n      const spacing = 40;\n      const totalWidth = (pegsInRow - 1) * spacing;\n      const startX = (CANVAS_WIDTH - totalWidth) / 2;\n\n      for (let col = 0; col < pegsInRow; col++) {\n        const x = startX + col * spacing;\n        pegs.push({ x, y, radius: PEG_RADIUS });\n      }\n    }\n\n    return pegs;\n  }, []);\n\n  // Generate multiplier slots\n  const generateSlots = useCallback((rows: number, riskLevel: RiskLevel): Slot[] => {\n    const slots: Slot[] = [];\n    const payouts = PAYOUT_TABLES[riskLevel][rows];\n    const slotCount = rows + 1;\n    const slotWidth = 45;\n    const slotSpacing = 8;\n    const totalWidth = slotCount * slotWidth + (slotCount - 1) * slotSpacing;\n    const startX = (CANVAS_WIDTH - totalWidth) / 2;\n    const slotY = CANVAS_HEIGHT - 70;\n    const slotHeight = 35;\n\n    for (let i = 0; i < slotCount; i++) {\n      const multiplier = payouts[i];\n      let color = '#10b981';\n\n      if (multiplier < 1) {\n        color = '#ef4444';\n      } else if (multiplier >= 10) {\n        color = '#8b5cf6';\n      } else if (multiplier >= 2) {\n        color = '#f59e42';\n      }\n\n      slots.push({\n        x: startX + i * (slotWidth + slotSpacing),\n        y: slotY,\n        width: slotWidth,\n        height: slotHeight,\n        multiplier,\n        color,\n        index: i\n      });\n    }\n\n    return slots;\n  }, []);\n\n  // Initialize pegs and slots\n  useEffect(() => {\n    pegsRef.current = generatePegs(gameState.rows);\n    slotsRef.current = generateSlots(gameState.rows, gameState.riskLevel);\n  }, [gameState.rows, gameState.riskLevel, generatePegs, generateSlots]);\n\n  // Physics simulation for ball\n  const updateBall = useCallback((ball: Ball): Ball => {\n    if (ball.finished) return ball;\n\n    ball.vy += GRAVITY;\n    ball.vx *= FRICTION;\n    ball.vy *= FRICTION;\n    ball.x += ball.vx;\n    ball.y += ball.vy;\n\n    // Track which row the ball is in\n    const startY = 100;\n    const endY = CANVAS_HEIGHT - 150;\n    const totalHeight = endY - startY;\n    const rowSpacing = totalHeight / gameState.rows;\n    const currentRow = Math.floor((ball.y - startY) / rowSpacing);\n    if (ball.currentRow === undefined || currentRow > ball.currentRow) {\n      ball.currentRow = currentRow;\n      ball.maxYThisRow = ball.y;\n    }\n    // Update maxYThisRow for this row\n    if (ball.maxYThisRow === undefined || ball.y > ball.maxYThisRow) {\n      ball.maxYThisRow = ball.y;\n    }\n\n    // Collision with pegs\n    pegsRef.current.forEach(peg => {\n      const dx = ball.x - peg.x;\n      const dy = ball.y - peg.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance < ball.radius + peg.radius) {\n        const angle = Math.atan2(dy, dx);\n        const targetX = peg.x + Math.cos(angle) * (ball.radius + peg.radius);\n        const targetY = peg.y + Math.sin(angle) * (ball.radius + peg.radius);\n\n        ball.x = targetX;\n        ball.y = targetY;\n\n        const speed = Math.sqrt(ball.vx * ball.vx + ball.vy * ball.vy);\n        ball.vx = Math.cos(angle) * speed * BOUNCE_DAMPING;\n        ball.vy = Math.sin(angle) * speed * BOUNCE_DAMPING;\n\n        // Prevent bouncing above the max Y reached in this row\n        if (ball.maxYThisRow !== undefined && ball.vy < 0 && ball.y < ball.maxYThisRow - rowSpacing * 0.08) {\n          ball.vy = 0.05; // Even smaller downward nudge for minimal bounce\n        }\n        ball.vx += (Math.random() - 0.5) * 0.5;\n      }\n    });\n\n    // Canvas boundaries\n    if (ball.x < ball.radius) {\n      ball.x = ball.radius;\n      ball.vx = Math.abs(ball.vx) * BOUNCE_DAMPING;\n    }\n    if (ball.x > CANVAS_WIDTH - ball.radius) {\n      ball.x = CANVAS_WIDTH - ball.radius;\n      ball.vx = -Math.abs(ball.vx) * BOUNCE_DAMPING;\n    }\n\n    // Check if ball reached slots\n    if (ball.y > CANVAS_HEIGHT - 120 && !ball.finished) {\n      const slot = slotsRef.current.find(s => \n        ball.x >= s.x && ball.x <= s.x + s.width\n      );\n\n      if (slot) {\n        ball.finished = true;\n        ball.slotIndex = slot.index;\n        ball.multiplier = slot.multiplier;\n        ball.payout = multiplyMoney(gameState.betAmount, slot.multiplier);\n\n        setTimeout(() => {\n          // Only pay out if the player has enough balance (should always be true)\n          setGameState(prev => {\n            // Prevent negative balance\n            const newTotalWinnings = addMoney(prev.totalWinnings, subtractMoney(ball.payout, gameState.betAmount));\n            return {\n              ...prev,\n              lastPayout: ball.payout,\n              totalWinnings: newTotalWinnings,\n              recentResults: [ball.multiplier, ...prev.recentResults.slice(0, 9)]\n            };\n          });\n          // Only pay out winnings (not net win/loss)\n          if (ball.payout > 0) {\n            onEarn(ball.payout);\n          }\n        }, 500);\n      }\n    }\n\n    return ball;\n  }, [gameState.betAmount, onEarn]);\n\n  // Animation loop\n  const animate = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#0f172a';\n    ctx.fillRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\n    // Draw pegs\n    pegsRef.current.forEach(peg => {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.4)';\n      ctx.beginPath();\n      ctx.arc(peg.x + 2, peg.y + 2, peg.radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      const pegGradient = ctx.createRadialGradient(\n        peg.x - 1, peg.y - 1, 0,\n        peg.x, peg.y, peg.radius\n      );\n      pegGradient.addColorStop(0, '#64748b');\n      pegGradient.addColorStop(0.7, '#475569');\n      pegGradient.addColorStop(1, '#334155');\n      \n      ctx.fillStyle = pegGradient;\n      ctx.beginPath();\n      ctx.arc(peg.x, peg.y, peg.radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.fillStyle = 'rgba(148, 163, 184, 0.8)';\n      ctx.beginPath();\n      ctx.arc(peg.x - 1.5, peg.y - 1.5, peg.radius * 0.5, 0, Math.PI * 2);\n      ctx.fill();\n    });\n\n    // Draw slots\n    slotsRef.current.forEach(slot => {\n      const drawRoundedRect = (x: number, y: number, width: number, height: number, radius: number) => {\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n      };\n      \n      const radius = 8;\n      \n      drawRoundedRect(slot.x + 2, slot.y + 2, slot.width, slot.height, radius);\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n      ctx.fill();\n      \n      drawRoundedRect(slot.x, slot.y, slot.width, slot.height, radius);\n      ctx.fillStyle = slot.color;\n      ctx.fill();\n      \n      ctx.strokeStyle = 'rgba(0, 0, 0, 0.2)';\n      ctx.lineWidth = 1;\n      ctx.stroke();\n\n      ctx.fillStyle = '#ffffff';\n      ctx.font = 'bold 14px Inter';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(\n        `${slot.multiplier}×`,\n        slot.x + slot.width / 2,\n        slot.y + slot.height / 2\n      );\n    });\n\n    // Update and draw balls\n    ballsRef.current = ballsRef.current.map(updateBall);\n\n    ballsRef.current.forEach(ball => {\n      ctx.globalAlpha = 0.3;\n      ctx.fillStyle = ball.color;\n      ctx.beginPath();\n      ctx.arc(ball.x - ball.vx * 2, ball.y - ball.vy * 2, ball.radius * 0.8, 0, Math.PI * 2);\n      ctx.fill();\n      \n      ctx.globalAlpha = 1;\n\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.4)';\n      ctx.beginPath();\n      ctx.arc(ball.x + 3, ball.y + 3, ball.radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      const gradient = ctx.createRadialGradient(\n        ball.x - 2, ball.y - 2, 0,\n        ball.x, ball.y, ball.radius\n      );\n      gradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\n      gradient.addColorStop(0.7, ball.color);\n      gradient.addColorStop(1, 'rgba(0, 0, 0, 0.3)');\n      \n      ctx.fillStyle = gradient;\n      ctx.beginPath();\n      ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n      ctx.fill();\n\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.6)';\n      ctx.beginPath();\n      ctx.arc(ball.x - 2, ball.y - 2, ball.radius * 0.4, 0, Math.PI * 2);\n      ctx.fill();\n    });\n\n    ballsRef.current = ballsRef.current.filter(ball => \n      !ball.finished || Date.now() - ball.id < 2000\n    );\n\n    animationRef.current = requestAnimationFrame(animate);\n  }, [updateBall]);\n\n  // Start animation\n  useEffect(() => {\n    animate();\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [animate]);\n\n  // Drop ball function\n  const dropBall = useCallback(() => {\n    if (gameState.betAmount > balance) return;\n    // Deduct bet immediately and prevent negative balance\n    onEarn(-gameState.betAmount);\n    setGameState(prev => ({\n      ...prev,\n      totalBallsDropped: prev.totalBallsDropped + 1\n    }));\n\n    const firstRowPegs = 3;\n    const spacing = 40;\n    const totalWidth = (firstRowPegs - 1) * spacing;\n    const startX = (CANVAS_WIDTH - totalWidth) / 2;\n    const leftmostPegX = startX;\n    const rightmostPegX = startX + totalWidth;\n    \n    const dropX = leftmostPegX + Math.random() * (rightmostPegX - leftmostPegX);\n\n    const newBall: Ball = {\n      x: dropX,\n      y: 30,\n      vx: (Math.random() - 0.5) * 0.3,\n      vy: 0,\n      radius: BALL_RADIUS,\n      id: Date.now() + Math.random(),\n      finished: false,\n      slotIndex: 0,\n      multiplier: 0,\n      payout: 0,\n      color: RISK_COLORS[gameState.riskLevel]\n    };\n\n    ballsRef.current.push(newBall);\n  }, [gameState.betAmount, balance, gameState.riskLevel, onEarn]);\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'linear-gradient(135deg, #0f172a 0%, #1e293b 50%, #0f172a 100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: 20,\n      overflow: 'auto',\n      zIndex: 1000\n    }}\n    >\n      <div\n        onClick={e => e.stopPropagation()}\n        style={{width: '100%', display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n        {/* All existing modal/game content below moved inside this div */}\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          width: '100%',\n          maxWidth: 1200,\n          marginBottom: 20,\n          background: 'rgba(15, 23, 42, 0.95)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 16,\n          padding: '16px 24px',\n          border: '1px solid rgba(94, 234, 212, 0.2)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'\n        }}>\n          <div style={{ display: 'flex', alignItems: 'center', gap: 12 }}>\n            <div style={{\n              width: 32,\n              height: 32,\n              background: 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)',\n              borderRadius: 8,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#0f172a'\n            }}>\n              P\n            </div>\n            <h1 style={{\n              ...applyTypography(typography.heading.lg),\n              color: '#5eead4',\n              margin: 0,\n              fontWeight: 'bold'\n            }}>\n              Professional Plinko\n            </h1>\n          </div>\n          <button\n            onClick={onClose}\n            style={{\n              background: 'rgba(239, 68, 68, 0.1)',\n              border: '1px solid rgba(239, 68, 68, 0.3)',\n              borderRadius: 10,\n              color: '#ef4444',\n              padding: '8px 16px',\n              cursor: 'pointer',\n              ...applyTypography(typography.ui.button.sm),\n              fontWeight: 'bold',\n              transition: 'all 0.2s ease'\n            }}\n          >\n            Close Game\n          </button>\n        </div>\n\n        <div style={{\n          display: 'flex',\n          gap: 20,\n          width: '100%',\n          maxWidth: 1200,\n          alignItems: 'flex-start'\n        }}>\n          {/* Left Controls Panel */}\n          <div style={{\n            background: 'rgba(15, 23, 42, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(94, 234, 212, 0.2)',\n            borderRadius: 20,\n            padding: 24,\n            width: 300,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n          }}>\n            {/* Balance */}\n            <div style={{ \n              textAlign: 'center',\n              background: 'linear-gradient(135deg, rgba(94, 234, 212, 0.1) 0%, rgba(16, 185, 129, 0.1) 100%)',\n              borderRadius: 16,\n              padding: 16,\n              border: '1px solid rgba(94, 234, 212, 0.2)'\n            }}>\n              <div style={{\n                ...applyTypography(typography.heading.lg),\n                color: '#5eead4',\n                marginBottom: 10,\n                fontWeight: 'bold'\n              }}>\n                ${formatMoney(balance)}\n              </div>\n            </div>\n\n            {/* Play Mode Toggle */}\n            <div>\n              <label style={{\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                Play Mode\n              </label>\n              <div style={{\n                display: 'flex',\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 14,\n                padding: 4,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              }}>\n                <button\n                  onClick={() => setGameState(prev => ({ \n                    ...prev, \n                    playMode: 'manual',\n                    isAutoPlaying: false \n                  }))}\n                  style={{\n                    flex: 1,\n                    background: gameState.playMode === 'manual' ? \n                      'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)' : \n                      'transparent',\n                    border: 'none',\n                    borderRadius: 10,\n                    color: gameState.playMode === 'manual' ? '#0f172a' : '#cbd5e1',\n                    padding: '10px 20px',\n                    cursor: 'pointer',\n                    ...applyTypography(typography.ui.button.sm),\n                    fontWeight: 'bold',\n                    transition: 'all 0.3s ease',\n                    boxShadow: gameState.playMode === 'manual' ? '0 4px 12px rgba(94, 234, 212, 0.3)' : 'none'\n                  }}\n                >\n                  Manual\n                </button>\n                <button\n                  onClick={() => setGameState(prev => ({ \n                    ...prev, \n                    playMode: 'auto',\n                    isAutoPlaying: false \n                  }))}\n                  style={{\n                    flex: 1,\n                    background: gameState.playMode === 'auto' ? \n                      'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)' : \n                      'transparent',\n                    border: 'none',\n                    borderRadius: 10,\n                    color: gameState.playMode === 'auto' ? '#0f172a' : '#cbd5e1',\n                    padding: '10px 20px',\n                    cursor: 'pointer',\n                    ...applyTypography(typography.ui.button.sm),\n                    fontWeight: 'bold',\n                    transition: 'all 0.3s ease',\n                    boxShadow: gameState.playMode === 'auto' ? '0 4px 12px rgba(94, 234, 212, 0.3)' : 'none'\n                  }}\n                >\n                  Auto\n                </button>\n              </div>\n            </div>\n\n            {/* Bet Amount */}\n            <div>\n              <label style={{\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                Bet Amount\n              </label>\n              <div style={{ \n                display: 'flex', \n                gap: 8, \n                marginBottom: 12,\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 4,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              }}>\n                <span style={{\n                  color: '#5eead4',\n                  padding: '8px 12px',\n                  ...applyTypography(typography.body.md),\n                  fontWeight: 'bold'\n                }}>\n                  $\n                </span>\n                <input\n                  type=\"number\"\n                  value={gameState.betAmount}\n                  onChange={e => {\n                    const raw = parseMoneyInput(e.target.value);\n                    let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                    setGameState(prev => ({ ...prev, betAmount: clamped }));\n                  }}\n                  style={{\n                    flex: 1,\n                    background: 'transparent',\n                    border: 'none',\n                    outline: 'none',\n                    color: textColors.white,\n                    padding: '8px 8px',\n                    ...applyTypography(typography.body.md),\n                    fontWeight: 'bold'\n                  }}\n                  step=\"0.01\"\n                  min={MIN_BET}\n                />\n              </div>\n              <div style={{ display: 'flex', gap: 6 }}>\n                {[0.5, 2, 5, 10].map(multiplier => (\n                  <button\n                    key={multiplier}\n                    onClick={() => setGameState(prev => ({ \n                      ...prev, \n                      betAmount: Math.max(MIN_BET, Math.min(sanitizeMoney(multiplier < 1 ? multiplyMoney(prev.betAmount, multiplier) : addMoney(prev.betAmount, multiplier)), roundMoney(balance)))\n                    }))}\n                    style={{\n                      flex: 1,\n                      background: 'rgba(94, 234, 212, 0.1)',\n                      border: '1px solid rgba(94, 234, 212, 0.3)',\n                      borderRadius: 8,\n                      color: '#5eead4',\n                      padding: '6px 8px',\n                      cursor: 'pointer',\n                      ...applyTypography(typography.ui.caption),\n                      fontSize: '11px',\n                      fontWeight: 'bold',\n                      transition: 'all 0.2s ease'\n                    }}\n                  >\n                    {multiplier < 1 ? `${multiplier}×` : `+$${multiplier}`}\n                  </button>\n                ))}\n              </div>\n              <div style={{ marginTop: 10 }}>\n                <button\n                  onClick={() => setGameState(prev => ({ ...prev, betAmount: Math.max(MIN_BET, roundMoney(balance)) }))}\n                  disabled={balance < MIN_BET}\n                  className=\"all-in-btn\"\n                >\n                  All In (${formatMoney(balance)})\n                </button>\n              </div>\n            </div>\n\n            {/* Risk Level */}\n            <div>\n              <label style={{\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                Risk Level\n              </label>\n              <div style={{ display: 'flex', gap: 6 }}>\n                {RISK_LEVELS.map(risk => (\n                  <button\n                    key={risk}\n                    onClick={() => setGameState(prev => ({ ...prev, riskLevel: risk }))}\n                    style={{\n                      flex: 1,\n                      background: gameState.riskLevel === risk ? \n                        RISK_COLORS[risk] : \n                        'rgba(30, 41, 59, 0.8)',\n                      border: gameState.riskLevel === risk ? \n                        'none' : \n                        '1px solid rgba(94, 234, 212, 0.15)',\n                      borderRadius: 10,\n                      color: textColors.white,\n                      padding: '10px 16px',\n                      cursor: 'pointer',\n                      ...applyTypography(typography.ui.button.sm),\n                      textTransform: 'capitalize',\n                      fontWeight: 'bold',\n                      transition: 'all 0.2s ease',\n                      boxShadow: gameState.riskLevel === risk ? \n                        `0 4px 12px ${RISK_COLORS[risk]}40` : \n                        'none'\n                    }}\n                  >\n                    {risk}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Rows */}\n            <div>\n              <label style={{\n                ...applyTypography(typography.ui.label),\n                color: '#94a3b8',\n                display: 'block',\n                marginBottom: 12,\n                fontSize: '14px',\n                fontWeight: '500'\n              }}>\n                Rows: {gameState.rows}\n              </label>\n              <div style={{\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 12,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              }}>\n                <input\n                  type=\"range\"\n                  min=\"8\"\n                  max=\"16\"\n                  value={gameState.rows}\n                  onChange={(e) => setGameState(prev => ({ \n                    ...prev, \n                    rows: parseInt(e.target.value) \n                  }))}\n                  style={{\n                    width: '100%',\n                    height: '6px',\n                    background: 'rgba(94, 234, 212, 0.2)',\n                    borderRadius: '3px',\n                    outline: 'none',\n                    appearance: 'none',\n                    cursor: 'pointer'\n                  }}\n                />\n              </div>\n            </div>\n\n            {/* Drop Ball Button */}\n            <button\n              onClick={gameState.playMode === 'manual' ? dropBall : () => \n                setGameState(prev => ({ ...prev, isAutoPlaying: !prev.isAutoPlaying }))}\n              disabled={gameState.betAmount > balance}\n              style={{\n                background: gameState.betAmount <= balance ? \n                  (gameState.isAutoPlaying ? \n                    'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)' :\n                    'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)') : \n                  'rgba(75, 85, 99, 0.5)',\n                border: 'none',\n                borderRadius: 16,\n                color: gameState.betAmount <= balance ? \n                  (gameState.isAutoPlaying ? textColors.white : '#0f172a') : \n                  '#9ca3af',\n                padding: '16px 24px',\n                cursor: gameState.betAmount <= balance ? 'pointer' : 'not-allowed',\n                ...applyTypography(typography.ui.button.lg),\n                fontWeight: 'bold',\n                boxShadow: gameState.betAmount <= balance ? \n                  (gameState.isAutoPlaying ? \n                    '0 6px 20px rgba(239, 68, 68, 0.4)' :\n                    '0 6px 20px rgba(94, 234, 212, 0.4)') : \n                  'none',\n                transition: 'all 0.3s ease',\n                textTransform: 'uppercase',\n                letterSpacing: '1px'\n              }}\n            >\n              {gameState.playMode === 'manual' ? \n                `Drop Ball - ${formatMoney(gameState.betAmount)}` :\n                gameState.isAutoPlaying ? 'Stop Auto' : 'Start Auto'\n              }\n            </button>\n          </div>\n\n          {/* Game Canvas */}\n          <canvas\n            ref={canvasRef}\n            width={CANVAS_WIDTH}\n            height={CANVAS_HEIGHT}\n            style={{\n              border: '2px solid rgba(94, 234, 212, 0.2)',\n              borderRadius: 20,\n              background: 'linear-gradient(180deg, #1e293b 0%, #0f172a 100%)',\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n            }}\n          />\n\n          {/* Right Stats Panel */}\n          <div style={{\n            background: 'rgba(15, 23, 42, 0.95)',\n            backdropFilter: 'blur(10px)',\n            border: '1px solid rgba(94, 234, 212, 0.2)',\n            borderRadius: 20,\n            padding: 24,\n            width: 250,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 20,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)'\n          }}>\n            {/* Stats */}\n            <div>\n              <h3 style={{\n                ...applyTypography(typography.heading.md),\n                color: '#5eead4',\n                margin: 0,\n                marginBottom: 16,\n                fontWeight: 'bold',\n                textAlign: 'center'\n              }}>\n                Statistics\n              </h3>\n              \n              <div style={{ \n                marginBottom: 16,\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              }}>\n                <div style={{\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                }}>\n                  Balls Dropped\n                </div>\n                <div style={{\n                  ...applyTypography(typography.heading.lg),\n                  color: '#5eead4',\n                  fontWeight: 'bold'\n                }}>\n                  {gameState.totalBallsDropped}\n                </div>\n              </div>\n\n              <div style={{ \n                marginBottom: 16,\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              }}>\n                <div style={{\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                }}>\n                  Last Payout\n                </div>\n                <div style={{\n                  ...applyTypography(typography.heading.lg),\n                  color: gameState.lastPayout > gameState.betAmount ? '#10b981' : '#ef4444',\n                  fontWeight: 'bold'\n                }}>\n                  ${formatMoney(gameState.lastPayout)}\n                </div>\n              </div>\n\n              <div style={{\n                background: 'rgba(94, 234, 212, 0.1)',\n                borderRadius: 12,\n                padding: 16,\n                border: '1px solid rgba(94, 234, 212, 0.2)'\n              }}>\n                <div style={{\n                  ...applyTypography(typography.body.sm),\n                  color: '#94a3b8',\n                  fontSize: '12px',\n                  marginBottom: 4\n                }}>\n                  Total P&L\n                </div>\n                <div style={{\n                  ...applyTypography(typography.heading.lg),\n                  color: gameState.totalWinnings >= 0 ? '#10b981' : '#ef4444',\n                  fontWeight: 'bold'\n                }}>\n                  {gameState.totalWinnings >= 0 ? '+' : '-'}${Math.abs(gameState.totalWinnings).toFixed(2)}\n                </div>\n              </div>\n            </div>\n\n            {/* Recent Results */}\n            <div>\n              <h4 style={{\n                ...applyTypography(typography.heading.sm),\n                color: '#5eead4',\n                margin: 0,\n                marginBottom: 12,\n                fontWeight: 'bold',\n                textAlign: 'center'\n              }}>\n                Recent Results\n              </h4>\n              <div style={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: '4px',\n                maxHeight: '80px',\n                overflowY: 'auto',\n                background: 'rgba(30, 41, 59, 0.8)',\n                borderRadius: 12,\n                padding: 12,\n                border: '1px solid rgba(94, 234, 212, 0.15)'\n              }}>\n                {gameState.recentResults.map((result, index) => (\n                  <div\n                    key={index}\n                    style={{\n                      minWidth: '32px',\n                      height: '24px',\n                      background: result >= 1 ? \n                        'linear-gradient(135deg, #10b981 0%, #059669 100%)' : \n                        'linear-gradient(135deg, #ef4444 0%, #dc2626 100%)',\n                      borderRadius: '6px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      color: textColors.white,\n                      fontSize: '10px',\n                      fontWeight: 'bold',\n                      boxShadow: result >= 1 ? \n                        '0 2px 4px rgba(16, 185, 129, 0.3)' : \n                        '0 2px 4px rgba(239, 68, 68, 0.3)'\n                    }}\n                  >\n                    {result.toFixed(1)}×\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div style={{\n          marginTop: 20,\n          padding: '16px 24px',\n          background: 'rgba(15, 23, 42, 0.95)',\n          backdropFilter: 'blur(10px)',\n          borderRadius: 16,\n          border: '1px solid rgba(94, 234, 212, 0.2)',\n          boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: 12\n        }}>\n          <div style={{\n            width: 20,\n            height: 20,\n            background: 'linear-gradient(135deg, #5eead4 0%, #14b8a6 100%)',\n            borderRadius: 4,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '12px',\n            fontWeight: 'bold',\n            color: '#0f172a'\n          }}>\n            ©\n          </div>\n          <span style={{\n            ...applyTypography(typography.body.sm),\n            color: '#94a3b8',\n            fontSize: '14px'\n          }}>\n            Professional Plinko 2025 • Player-Favorable Odds • Built with React & TypeScript\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlinkoGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
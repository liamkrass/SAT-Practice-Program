{"ast":null,"code":"var _jsxFileName = \"/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/components/BlackjackGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { typography, applyTypography, textColors } from '../styles/typography';\nimport { formatMoney, roundMoney, addMoney, multiplyMoney, parseMoneyInput, sanitizeMoney } from '../utils/money';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MIN_BET = 0.01;\nconst BlackjackGame = ({\n  onClose,\n  balance,\n  onEarn\n}) => {\n  _s();\n  const [gameState, setGameState] = useState({\n    playerCards: [],\n    dealerCards: [],\n    deck: [],\n    gameStatus: 'betting',\n    betAmount: roundMoney(5),\n    playerScore: 0,\n    dealerScore: 0,\n    result: '',\n    canDouble: false,\n    canSplit: false\n  });\n  const [insuranceOffered, setInsuranceOffered] = useState(false);\n  const [insuranceBet, setInsuranceBet] = useState(0);\n  const [insuranceResolved, setInsuranceResolved] = useState(false);\n  const [betInputActive, setBetInputActive] = useState(false);\n  const [betInputValue, setBetInputValue] = useState(gameState.betAmount.toString());\n  const createDeck = useCallback(() => {\n    const suits = ['♠', '♥', '♦', '♣'];\n    const ranks = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    const deck = [];\n    for (const suit of suits) {\n      for (const rank of ranks) {\n        let value = parseInt(rank);\n        if (rank === 'A') value = 11;else if (['J', 'Q', 'K'].includes(rank)) value = 10;\n        deck.push({\n          suit,\n          rank,\n          value\n        });\n      }\n    }\n\n    // Shuffle deck\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n    return deck;\n  }, []);\n  const calculateScore = useCallback(cards => {\n    let score = 0;\n    let aces = 0;\n    for (const card of cards) {\n      if (card.rank === 'A') {\n        aces++;\n        score += 11;\n      } else {\n        score += card.value;\n      }\n    }\n\n    // Convert aces from 11 to 1 if needed\n    while (score > 21 && aces > 0) {\n      score -= 10;\n      aces--;\n    }\n    return score;\n  }, []);\n  const dealCard = useCallback(deck => {\n    const card = deck[0];\n    const remainingDeck = deck.slice(1);\n    return {\n      card,\n      remainingDeck\n    };\n  }, []);\n  const startNewGame = useCallback(() => {\n    if (balance < gameState.betAmount) return;\n    const newDeck = createDeck();\n    let currentDeck = newDeck;\n    // Deal initial cards\n    const {\n      card: playerCard1,\n      remainingDeck: deck1\n    } = dealCard(currentDeck);\n    const {\n      card: dealerCard1,\n      remainingDeck: deck2\n    } = dealCard(deck1);\n    const {\n      card: playerCard2,\n      remainingDeck: deck3\n    } = dealCard(deck2);\n    const {\n      card: dealerCard2,\n      remainingDeck: finalDeck\n    } = dealCard(deck3);\n    const playerCards = [playerCard1, playerCard2];\n    const dealerCards = [dealerCard1, dealerCard2];\n    const playerScore = calculateScore(playerCards);\n    const dealerScore = calculateScore([dealerCard1]);\n\n    // Deduct bet\n    onEarn(roundMoney(-gameState.betAmount));\n\n    // Check for blackjack\n    const playerBlackjack = playerScore === 21;\n    const dealerBlackjack = calculateScore(dealerCards) === 21;\n    let status = 'playing';\n    let result = '';\n    setInsuranceOffered(false);\n    setInsuranceBet(0);\n    setInsuranceResolved(false);\n    if (dealerCard1.rank === 'A' && !playerBlackjack && !dealerBlackjack) {\n      setInsuranceOffered(true);\n    }\n    if (playerBlackjack && dealerBlackjack) {\n      status = 'finished';\n      result = 'Push! Both have blackjack';\n      onEarn(roundMoney(gameState.betAmount)); // Return bet\n    } else if (playerBlackjack) {\n      status = 'finished';\n      result = 'Blackjack! You win!';\n      onEarn(roundMoney(multiplyMoney(gameState.betAmount, 2.5))); // 3:2 payout\n    } else if (dealerBlackjack) {\n      status = 'finished';\n      result = 'Dealer blackjack. You lose.';\n    }\n    setGameState(prev => ({\n      ...prev,\n      playerCards,\n      dealerCards,\n      deck: finalDeck,\n      gameStatus: status,\n      playerScore,\n      dealerScore,\n      result,\n      canDouble: playerCards.length === 2 && balance >= prev.betAmount,\n      canSplit: playerCards.length === 2 && playerCard1.rank === playerCard2.rank && balance >= prev.betAmount\n    }));\n  }, [balance, gameState.betAmount, createDeck, dealCard, calculateScore, onEarn]);\n\n  // Insurance logic\n  const offerInsurance = () => {\n    if (!insuranceOffered || insuranceBet > 0) return;\n    const maxInsurance = roundMoney(gameState.betAmount / 2);\n    if (balance < maxInsurance) return;\n    setInsuranceBet(maxInsurance);\n    onEarn(-maxInsurance);\n  };\n  const resolveInsurance = () => {\n    if (!insuranceOffered || insuranceResolved) return;\n    setInsuranceResolved(true);\n    const dealerBlackjack = calculateScore(gameState.dealerCards) === 21;\n    if (dealerBlackjack && insuranceBet > 0) {\n      // Insurance pays 2:1\n      onEarn(roundMoney(insuranceBet * 3)); // get back insurance + 2x payout\n    }\n  };\n  const stand = useCallback(() => {\n    if (gameState.gameStatus !== 'playing') return;\n    setGameState(prev => ({\n      ...prev,\n      gameStatus: 'dealer'\n    }));\n    setTimeout(() => {\n      setGameState(prev => {\n        let dealerCards = [...prev.dealerCards];\n        let currentDeck = [...prev.deck];\n        let dealerScore = calculateScore(dealerCards);\n\n        // Dealer hits on 16, stands on 17\n        while (dealerScore < 17) {\n          const {\n            card,\n            remainingDeck\n          } = dealCard(currentDeck);\n          dealerCards.push(card);\n          currentDeck = remainingDeck;\n          dealerScore = calculateScore(dealerCards);\n        }\n        let result = '';\n        if (dealerScore > 21) {\n          result = 'Dealer busts! You win!';\n          onEarn(roundMoney(prev.betAmount)); // Win: return bet amount as profit (bet already deducted)\n        } else if (dealerScore > prev.playerScore) {\n          result = 'Dealer wins.';\n        } else if (dealerScore < prev.playerScore) {\n          result = 'You win!';\n          onEarn(roundMoney(prev.betAmount)); // Win: return bet amount as profit (bet already deducted)\n        } else {\n          result = 'Push! Tie game.';\n          onEarn(roundMoney(prev.betAmount)); // Return only the original bet (no profit)\n        }\n        return {\n          ...prev,\n          dealerCards,\n          deck: currentDeck,\n          dealerScore,\n          gameStatus: 'finished',\n          result\n        };\n      });\n    }, 1000);\n  }, [gameState.gameStatus, dealCard, calculateScore, onEarn]);\n  const hit = useCallback(() => {\n    if (gameState.gameStatus !== 'playing') return;\n    if (gameState.playerScore === 21) {\n      stand();\n      return;\n    }\n    const {\n      card,\n      remainingDeck\n    } = dealCard(gameState.deck);\n    const newPlayerCards = [...gameState.playerCards, card];\n    const newScore = calculateScore(newPlayerCards);\n    if (newScore === 21) {\n      setGameState(prev => ({\n        ...prev,\n        playerCards: newPlayerCards,\n        deck: remainingDeck,\n        playerScore: newScore,\n        canDouble: false,\n        canSplit: false\n      }));\n      setTimeout(() => stand(), 100);\n      return;\n    }\n    setGameState(prev => {\n      if (newScore > 21) {\n        return {\n          ...prev,\n          playerCards: newPlayerCards,\n          deck: remainingDeck,\n          playerScore: newScore,\n          gameStatus: 'finished',\n          result: 'Bust! You lose.',\n          canDouble: false,\n          canSplit: false\n        };\n      }\n      return {\n        ...prev,\n        playerCards: newPlayerCards,\n        deck: remainingDeck,\n        playerScore: newScore,\n        canDouble: false,\n        canSplit: false\n      };\n    });\n  }, [gameState, dealCard, calculateScore, stand]);\n  const doubleDown = useCallback(() => {\n    if (!gameState.canDouble || balance < gameState.betAmount) return;\n\n    // Double the bet\n    onEarn(roundMoney(-gameState.betAmount));\n    const {\n      card,\n      remainingDeck\n    } = dealCard(gameState.deck);\n    const newPlayerCards = [...gameState.playerCards, card];\n    const newScore = calculateScore(newPlayerCards);\n    setGameState(prev => ({\n      ...prev,\n      playerCards: newPlayerCards,\n      deck: remainingDeck,\n      playerScore: newScore,\n      betAmount: roundMoney(multiplyMoney(prev.betAmount, 2)),\n      canDouble: false,\n      canSplit: false\n    }));\n    if (newScore > 21) {\n      setGameState(prev => ({\n        ...prev,\n        gameStatus: 'finished',\n        result: 'Bust! You lose.'\n      }));\n    } else {\n      // Automatically stand after double down\n      stand();\n    }\n  }, [gameState, balance, dealCard, calculateScore, onEarn, stand]);\n  const renderCard = (card, hidden = false) => {\n    const isRed = card.suit === '♥' || card.suit === '♦';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `blackjack-card ${hidden ? 'hidden' : ''}`,\n      children: hidden ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-back\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"40\",\n          height: \"60\",\n          viewBox: \"0 0 40 60\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            width: \"40\",\n            height: \"60\",\n            rx: \"4\",\n            fill: \"#4f46e5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"4\",\n            y: \"4\",\n            width: \"32\",\n            height: \"52\",\n            rx: \"2\",\n            fill: \"#6366f1\",\n            opacity: \"0.8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"20\",\n            cy: \"30\",\n            r: \"8\",\n            fill: \"white\",\n            opacity: \"0.9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"20\",\n            cy: \"30\",\n            r: \"4\",\n            fill: \"#4f46e5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16 26L20 30L24 26\",\n            stroke: \"white\",\n            strokeWidth: \"1\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M16 34L20 30L24 34\",\n            stroke: \"white\",\n            strokeWidth: \"1\",\n            fill: \"none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-rank ${isRed ? 'red' : 'black'}`,\n          children: card.rank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `card-suit ${isRed ? 'red' : 'black'}`,\n          children: card.suit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blackjack-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blackjack-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          ...applyTypography(typography.heading.lg),\n          color: textColors.primary,\n          display: 'flex',\n          alignItems: 'center',\n          gap: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"32\",\n          height: \"32\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"3\",\n            y: \"5\",\n            width: \"8\",\n            height: \"11\",\n            rx: \"2\",\n            fill: \"white\",\n            stroke: \"#374151\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"13\",\n            y: \"8\",\n            width: \"8\",\n            height: \"11\",\n            rx: \"2\",\n            fill: \"white\",\n            stroke: \"#374151\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"7\",\n            y: \"12\",\n            fontSize: \"6\",\n            fill: \"#dc2626\",\n            textAnchor: \"middle\",\n            fontWeight: \"bold\",\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M6 9L7 7L8 9\",\n            fill: \"#dc2626\",\n            opacity: \"0.6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: \"17\",\n            y: \"15\",\n            fontSize: \"6\",\n            fill: \"#1f2937\",\n            textAnchor: \"middle\",\n            fontWeight: \"bold\",\n            children: \"K\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"15\",\n            y: \"11\",\n            width: \"4\",\n            height: \"2.5\",\n            rx: \"0.5\",\n            fill: \"#1f2937\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"7\",\n            cy: \"20\",\n            r: \"2\",\n            fill: \"#059669\",\n            stroke: \"#047857\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"17\",\n            cy: \"20\",\n            r: \"2\",\n            fill: \"#dc2626\",\n            stroke: \"#991b1b\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), \"Blackjack\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"blackjack-close-btn\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blackjack-content\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        gap: 30,\n        padding: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n          minWidth: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blackjack-balance\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#5eead4',\n                fontWeight: 'bold'\n              },\n              children: [\"Balance: \", formatMoney(balance)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blackjack-bet-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bet Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blackjack-bet-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const half = Math.max(MIN_BET, Math.min(roundMoney(balance), sanitizeMoney(multiplyMoney(gameState.betAmount, 0.5))));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: half\n                  }));\n                  setBetInputValue(half.toString());\n                },\n                disabled: gameState.gameStatus !== 'betting',\n                children: \"\\xBD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: betInputActive ? betInputValue : gameState.betAmount,\n                onFocus: e => {\n                  e.target.select();\n                  setBetInputActive(true);\n                  setBetInputValue('');\n                },\n                onBlur: e => {\n                  const raw = parseMoneyInput(e.target.value);\n                  let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: clamped\n                  }));\n                  setBetInputActive(false);\n                  setBetInputValue(clamped.toString());\n                },\n                onChange: e => {\n                  setBetInputValue(e.target.value);\n                  const raw = parseMoneyInput(e.target.value);\n                  let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: clamped\n                  }));\n                },\n                min: MIN_BET,\n                step: \"0.01\",\n                disabled: gameState.gameStatus !== 'betting',\n                style: {\n                  width: 80,\n                  textAlign: 'center',\n                  margin: '0 8px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const plus = Math.max(MIN_BET, Math.min(roundMoney(addMoney(gameState.betAmount, 1)), roundMoney(balance)));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: plus\n                  }));\n                  setBetInputValue(plus.toString());\n                },\n                disabled: gameState.gameStatus !== 'betting',\n                children: \"+$1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const twice = Math.max(MIN_BET, Math.min(roundMoney(balance), sanitizeMoney(multiplyMoney(gameState.betAmount, 2))));\n                  setGameState(prev => ({\n                    ...prev,\n                    betAmount: twice\n                  }));\n                  setBetInputValue(twice.toString());\n                },\n                disabled: gameState.gameStatus !== 'betting',\n                children: \"2\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"blackjack-bet-controls\",\n              style: {\n                marginTop: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setGameState(prev => ({\n                  ...prev,\n                  betAmount: Math.max(MIN_BET, roundMoney(balance))\n                })),\n                disabled: balance < MIN_BET,\n                className: \"all-in-btn\",\n                children: [\"All In (\", formatMoney(balance), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), gameState.gameStatus === 'betting' && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: startNewGame,\n            disabled: balance < gameState.betAmount,\n            className: \"blackjack-deal-btn\",\n            children: [\"Deal (\", formatMoney(gameState.betAmount), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), gameState.gameStatus === 'playing' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-actions\",\n          style: {\n            width: '100%',\n            marginTop: 18\n          },\n          children: [gameState.playerScore < 21 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: hit,\n            className: \"blackjack-action-btn\",\n            children: \"Hit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: stand,\n            className: \"blackjack-action-btn\",\n            children: \"Stand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), gameState.canDouble && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: doubleDown,\n            className: \"blackjack-action-btn\",\n            children: [\"Double (\", formatMoney(gameState.betAmount), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), gameState.gameStatus === 'finished' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setGameState(prev => ({\n            ...prev,\n            gameStatus: 'betting',\n            result: ''\n          })),\n          className: \"blackjack-new-game-btn\",\n          style: {\n            marginTop: 18,\n            width: '100%'\n          },\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blackjack-table\",\n        style: {\n          flex: 1,\n          marginLeft: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-dealer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Dealer \", gameState.gameStatus !== 'betting' && `(${gameState.dealerScore})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blackjack-cards\",\n            children: gameState.dealerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderCard(card, gameState.gameStatus === 'playing' && index === 1)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-player\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"You \", gameState.gameStatus !== 'betting' && `(${gameState.playerScore})`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blackjack-cards\",\n            children: gameState.playerCards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: renderCard(card)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), gameState.result && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-result\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: gameState.result.includes('win') || gameState.result.includes('Blackjack') ? '#10b981' : gameState.result.includes('Push') ? '#fbbf24' : '#dc2626'\n            },\n            children: gameState.result\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), insuranceOffered && !insuranceResolved && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blackjack-insurance\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#fbbf24',\n              fontWeight: 'bold'\n            },\n            children: \"Dealer shows Ace. Take insurance?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: offerInsurance,\n            disabled: insuranceBet > 0 || balance < roundMoney(gameState.betAmount / 2),\n            children: [\"Insurance (\", formatMoney(roundMoney(gameState.betAmount / 2)), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), insuranceBet > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#5eead4',\n              marginLeft: 8\n            },\n            children: \"Insurance placed!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resolveInsurance,\n            style: {\n              marginLeft: 12\n            },\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n};\n_s(BlackjackGame, \"g6PWuVslhgmfA42VGkU4n+QxuKk=\");\n_c = BlackjackGame;\nexport default BlackjackGame;\nvar _c;\n$RefreshReg$(_c, \"BlackjackGame\");","map":{"version":3,"names":["React","useState","useCallback","typography","applyTypography","textColors","formatMoney","roundMoney","addMoney","multiplyMoney","parseMoneyInput","sanitizeMoney","jsxDEV","_jsxDEV","Fragment","_Fragment","MIN_BET","BlackjackGame","onClose","balance","onEarn","_s","gameState","setGameState","playerCards","dealerCards","deck","gameStatus","betAmount","playerScore","dealerScore","result","canDouble","canSplit","insuranceOffered","setInsuranceOffered","insuranceBet","setInsuranceBet","insuranceResolved","setInsuranceResolved","betInputActive","setBetInputActive","betInputValue","setBetInputValue","toString","createDeck","suits","ranks","suit","rank","value","parseInt","includes","push","i","length","j","Math","floor","random","calculateScore","cards","score","aces","card","dealCard","remainingDeck","slice","startNewGame","newDeck","currentDeck","playerCard1","deck1","dealerCard1","deck2","playerCard2","deck3","dealerCard2","finalDeck","playerBlackjack","dealerBlackjack","status","prev","offerInsurance","maxInsurance","resolveInsurance","stand","setTimeout","hit","newPlayerCards","newScore","doubleDown","renderCard","hidden","isRed","className","children","width","height","viewBox","fill","xmlns","rx","fileName","_jsxFileName","lineNumber","columnNumber","x","y","opacity","cx","cy","r","d","stroke","strokeWidth","style","heading","lg","color","primary","display","alignItems","gap","fontSize","textAnchor","fontWeight","onClick","flexDirection","padding","minWidth","half","max","min","disabled","type","onFocus","e","target","select","onBlur","raw","clamped","onChange","step","textAlign","margin","plus","twice","marginTop","flex","marginLeft","map","index","_c","$RefreshReg$"],"sources":["/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/components/BlackjackGame.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { typography, applyTypography, textColors } from '../styles/typography';\nimport { \n  formatMoney, \n  roundMoney, \n  addMoney, \n  subtractMoney, \n  multiplyMoney, \n  parseMoneyInput, \n  sanitizeMoney,\n  isValidMoney \n} from '../utils/money';\n\ninterface BlackjackGameProps {\n  onClose: () => void;\n  balance: number;\n  onEarn: (amount: number) => void;\n}\n\ninterface Card {\n  suit: '♠' | '♥' | '♦' | '♣';\n  rank: string;\n  value: number;\n}\n\ninterface GameState {\n  playerCards: Card[];\n  dealerCards: Card[];\n  deck: Card[];\n  gameStatus: 'betting' | 'playing' | 'dealer' | 'finished';\n  betAmount: number;\n  playerScore: number;\n  dealerScore: number;\n  result: string;\n  canDouble: boolean;\n  canSplit: boolean;\n}\n\nconst MIN_BET = 0.01;\n\nconst BlackjackGame: React.FC<BlackjackGameProps> = ({ onClose, balance, onEarn }) => {\n  const [gameState, setGameState] = useState<GameState>({\n    playerCards: [],\n    dealerCards: [],\n    deck: [],\n    gameStatus: 'betting',\n    betAmount: roundMoney(5),\n    playerScore: 0,\n    dealerScore: 0,\n    result: '',\n    canDouble: false,\n    canSplit: false,\n  });\n  const [insuranceOffered, setInsuranceOffered] = useState(false);\n  const [insuranceBet, setInsuranceBet] = useState(0);\n  const [insuranceResolved, setInsuranceResolved] = useState(false);\n  const [betInputActive, setBetInputActive] = useState(false);\n  const [betInputValue, setBetInputValue] = useState(gameState.betAmount.toString());\n\n  const createDeck = useCallback((): Card[] => {\n    const suits: Card['suit'][] = ['♠', '♥', '♦', '♣'];\n    const ranks = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];\n    const deck: Card[] = [];\n\n    for (const suit of suits) {\n      for (const rank of ranks) {\n        let value = parseInt(rank);\n        if (rank === 'A') value = 11;\n        else if (['J', 'Q', 'K'].includes(rank)) value = 10;\n        \n        deck.push({ suit, rank, value });\n      }\n    }\n\n    // Shuffle deck\n    for (let i = deck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [deck[i], deck[j]] = [deck[j], deck[i]];\n    }\n\n    return deck;\n  }, []);\n\n  const calculateScore = useCallback((cards: Card[]): number => {\n    let score = 0;\n    let aces = 0;\n\n    for (const card of cards) {\n      if (card.rank === 'A') {\n        aces++;\n        score += 11;\n      } else {\n        score += card.value;\n      }\n    }\n\n    // Convert aces from 11 to 1 if needed\n    while (score > 21 && aces > 0) {\n      score -= 10;\n      aces--;\n    }\n\n    return score;\n  }, []);\n\n  const dealCard = useCallback((deck: Card[]): { card: Card; remainingDeck: Card[] } => {\n    const card = deck[0];\n    const remainingDeck = deck.slice(1);\n    return { card, remainingDeck };\n  }, []);\n\n  const startNewGame = useCallback(() => {\n    if (balance < gameState.betAmount) return;\n\n    const newDeck = createDeck();\n    let currentDeck = newDeck;\n    // Deal initial cards\n    const { card: playerCard1, remainingDeck: deck1 } = dealCard(currentDeck);\n    const { card: dealerCard1, remainingDeck: deck2 } = dealCard(deck1);\n    const { card: playerCard2, remainingDeck: deck3 } = dealCard(deck2);\n    const { card: dealerCard2, remainingDeck: finalDeck } = dealCard(deck3);\n\n    const playerCards = [playerCard1, playerCard2];\n    const dealerCards = [dealerCard1, dealerCard2];\n    const playerScore = calculateScore(playerCards);\n    const dealerScore = calculateScore([dealerCard1]);\n\n    // Deduct bet\n    onEarn(roundMoney(-gameState.betAmount));\n\n    // Check for blackjack\n    const playerBlackjack = playerScore === 21;\n    const dealerBlackjack = calculateScore(dealerCards) === 21;\n\n    let status: GameState['gameStatus'] = 'playing';\n    let result = '';\n    setInsuranceOffered(false);\n    setInsuranceBet(0);\n    setInsuranceResolved(false);\n\n    if (dealerCard1.rank === 'A' && !playerBlackjack && !dealerBlackjack) {\n      setInsuranceOffered(true);\n    }\n\n    if (playerBlackjack && dealerBlackjack) {\n      status = 'finished';\n      result = 'Push! Both have blackjack';\n      onEarn(roundMoney(gameState.betAmount)); // Return bet\n    } else if (playerBlackjack) {\n      status = 'finished';\n      result = 'Blackjack! You win!';\n      onEarn(roundMoney(multiplyMoney(gameState.betAmount, 2.5))); // 3:2 payout\n    } else if (dealerBlackjack) {\n      status = 'finished';\n      result = 'Dealer blackjack. You lose.';\n    }\n\n    setGameState(prev => ({\n      ...prev,\n      playerCards,\n      dealerCards,\n      deck: finalDeck,\n      gameStatus: status,\n      playerScore,\n      dealerScore,\n      result,\n      canDouble: playerCards.length === 2 && balance >= prev.betAmount,\n      canSplit: playerCards.length === 2 && playerCard1.rank === playerCard2.rank && balance >= prev.betAmount,\n    }));\n  }, [balance, gameState.betAmount, createDeck, dealCard, calculateScore, onEarn]);\n\n  // Insurance logic\n  const offerInsurance = () => {\n    if (!insuranceOffered || insuranceBet > 0) return;\n    const maxInsurance = roundMoney(gameState.betAmount / 2);\n    if (balance < maxInsurance) return;\n    setInsuranceBet(maxInsurance);\n    onEarn(-maxInsurance);\n  };\n\n  const resolveInsurance = () => {\n    if (!insuranceOffered || insuranceResolved) return;\n    setInsuranceResolved(true);\n    const dealerBlackjack = calculateScore(gameState.dealerCards) === 21;\n    if (dealerBlackjack && insuranceBet > 0) {\n      // Insurance pays 2:1\n      onEarn(roundMoney(insuranceBet * 3)); // get back insurance + 2x payout\n    }\n  };\n\n  const stand = useCallback(() => {\n    if (gameState.gameStatus !== 'playing') return;\n    setGameState(prev => ({ ...prev, gameStatus: 'dealer' }));\n    setTimeout(() => {\n      setGameState(prev => {\n        let dealerCards = [...prev.dealerCards];\n        let currentDeck = [...prev.deck];\n        let dealerScore = calculateScore(dealerCards);\n\n        // Dealer hits on 16, stands on 17\n        while (dealerScore < 17) {\n          const { card, remainingDeck } = dealCard(currentDeck);\n          dealerCards.push(card);\n          currentDeck = remainingDeck;\n          dealerScore = calculateScore(dealerCards);\n        }\n\n        let result = '';\n        if (dealerScore > 21) {\n          result = 'Dealer busts! You win!';\n          onEarn(roundMoney(prev.betAmount)); // Win: return bet amount as profit (bet already deducted)\n        } else if (dealerScore > prev.playerScore) {\n          result = 'Dealer wins.';\n        } else if (dealerScore < prev.playerScore) {\n          result = 'You win!';\n          onEarn(roundMoney(prev.betAmount)); // Win: return bet amount as profit (bet already deducted)\n        } else {\n          result = 'Push! Tie game.';\n          onEarn(roundMoney(prev.betAmount)); // Return only the original bet (no profit)\n        }\n\n        return {\n          ...prev,\n          dealerCards,\n          deck: currentDeck,\n          dealerScore,\n          gameStatus: 'finished',\n          result,\n        };\n      });\n    }, 1000);\n  }, [gameState.gameStatus, dealCard, calculateScore, onEarn]);\n\n  const hit = useCallback(() => {\n    if (gameState.gameStatus !== 'playing') return;\n    if (gameState.playerScore === 21) {\n      stand();\n      return;\n    }\n    const { card, remainingDeck } = dealCard(gameState.deck);\n    const newPlayerCards = [...gameState.playerCards, card];\n    const newScore = calculateScore(newPlayerCards);\n    if (newScore === 21) {\n      setGameState(prev => ({\n        ...prev,\n        playerCards: newPlayerCards,\n        deck: remainingDeck,\n        playerScore: newScore,\n        canDouble: false,\n        canSplit: false,\n      }));\n      setTimeout(() => stand(), 100);\n      return;\n    }\n    setGameState(prev => {\n      if (newScore > 21) {\n        return {\n          ...prev,\n          playerCards: newPlayerCards,\n          deck: remainingDeck,\n          playerScore: newScore,\n          gameStatus: 'finished',\n          result: 'Bust! You lose.',\n          canDouble: false,\n          canSplit: false,\n        };\n      }\n      return {\n        ...prev,\n        playerCards: newPlayerCards,\n        deck: remainingDeck,\n        playerScore: newScore,\n        canDouble: false,\n        canSplit: false,\n      };\n    });\n  }, [gameState, dealCard, calculateScore, stand]);\n\n  const doubleDown = useCallback(() => {\n    if (!gameState.canDouble || balance < gameState.betAmount) return;\n\n    // Double the bet\n    onEarn(roundMoney(-gameState.betAmount));\n    \n    const { card, remainingDeck } = dealCard(gameState.deck);\n    const newPlayerCards = [...gameState.playerCards, card];\n    const newScore = calculateScore(newPlayerCards);\n\n    setGameState(prev => ({\n      ...prev,\n      playerCards: newPlayerCards,\n      deck: remainingDeck,\n      playerScore: newScore,\n      betAmount: roundMoney(multiplyMoney(prev.betAmount, 2)),\n      canDouble: false,\n      canSplit: false,\n    }));\n\n    if (newScore > 21) {\n      setGameState(prev => ({\n        ...prev,\n        gameStatus: 'finished',\n        result: 'Bust! You lose.',\n      }));\n    } else {\n      // Automatically stand after double down\n      stand();\n    }\n  }, [gameState, balance, dealCard, calculateScore, onEarn, stand]);\n\n  const renderCard = (card: Card, hidden = false) => {\n    const isRed = card.suit === '♥' || card.suit === '♦';\n    \n    return (\n      <div className={`blackjack-card ${hidden ? 'hidden' : ''}`}>\n        {hidden ? (\n          <div className=\"card-back\">\n            <svg width=\"40\" height=\"60\" viewBox=\"0 0 40 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <rect width=\"40\" height=\"60\" rx=\"4\" fill=\"#4f46e5\"/>\n              <rect x=\"4\" y=\"4\" width=\"32\" height=\"52\" rx=\"2\" fill=\"#6366f1\" opacity=\"0.8\"/>\n              <circle cx=\"20\" cy=\"30\" r=\"8\" fill=\"white\" opacity=\"0.9\"/>\n              <circle cx=\"20\" cy=\"30\" r=\"4\" fill=\"#4f46e5\"/>\n              <path d=\"M16 26L20 30L24 26\" stroke=\"white\" strokeWidth=\"1\" fill=\"none\"/>\n              <path d=\"M16 34L20 30L24 34\" stroke=\"white\" strokeWidth=\"1\" fill=\"none\"/>\n            </svg>\n          </div>\n        ) : (\n          <>\n            <div className={`card-rank ${isRed ? 'red' : 'black'}`}>\n              {card.rank}\n            </div>\n            <div className={`card-suit ${isRed ? 'red' : 'black'}`}>\n              {card.suit}\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"blackjack-game\">\n      {/* Header */}\n      <div className=\"blackjack-header\">\n        <h1 style={{ ...applyTypography(typography.heading.lg), color: textColors.primary, display: 'flex', alignItems: 'center', gap: '12px' }}>\n          <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            {/* Modern Blackjack Cards */}\n            <rect x=\"3\" y=\"5\" width=\"8\" height=\"11\" rx=\"2\" fill=\"white\" stroke=\"#374151\" strokeWidth=\"1\"/>\n            <rect x=\"13\" y=\"8\" width=\"8\" height=\"11\" rx=\"2\" fill=\"white\" stroke=\"#374151\" strokeWidth=\"1\"/>\n            <text x=\"7\" y=\"12\" fontSize=\"6\" fill=\"#dc2626\" textAnchor=\"middle\" fontWeight=\"bold\">A</text>\n            <path d=\"M6 9L7 7L8 9\" fill=\"#dc2626\" opacity=\"0.6\"/>\n            <text x=\"17\" y=\"15\" fontSize=\"6\" fill=\"#1f2937\" textAnchor=\"middle\" fontWeight=\"bold\">K</text>\n            <rect x=\"15\" y=\"11\" width=\"4\" height=\"2.5\" rx=\"0.5\" fill=\"#1f2937\" opacity=\"0.3\"/>\n            <circle cx=\"7\" cy=\"20\" r=\"2\" fill=\"#059669\" stroke=\"#047857\" strokeWidth=\"0.5\"/>\n            <circle cx=\"17\" cy=\"20\" r=\"2\" fill=\"#dc2626\" stroke=\"#991b1b\" strokeWidth=\"0.5\"/>\n          </svg>\n          Blackjack\n        </h1>\n        <button onClick={onClose} className=\"blackjack-close-btn\">←</button>\n      </div>\n      <div className=\"blackjack-content\" style={{ display: 'flex', flexDirection: 'row', gap: 30, padding: 30 }}>\n        {/* Controls + Actions column */}\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', minWidth: 300 }}>\n          <div className=\"blackjack-controls\">\n            {/* Controls */}\n            <div className=\"blackjack-balance\">\n              <span style={{ color: '#5eead4', fontWeight: 'bold' }}>\n                Balance: {formatMoney(balance)}\n              </span>\n            </div>\n\n            <div className=\"blackjack-bet-section\">\n              <label>Bet Amount</label>\n              <div className=\"blackjack-bet-controls\">\n                <button onClick={() => {\n                  const half = Math.max(MIN_BET, Math.min(roundMoney(balance), sanitizeMoney(multiplyMoney(gameState.betAmount, 0.5))));\n                  setGameState(prev => ({ ...prev, betAmount: half }));\n                  setBetInputValue(half.toString());\n                }} disabled={gameState.gameStatus !== 'betting'}>½</button>\n                <input\n                  type=\"number\"\n                  value={betInputActive ? betInputValue : gameState.betAmount}\n                  onFocus={e => {\n                    e.target.select();\n                    setBetInputActive(true);\n                    setBetInputValue('');\n                  }}\n                  onBlur={e => {\n                    const raw = parseMoneyInput(e.target.value);\n                    let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                    setGameState(prev => ({ ...prev, betAmount: clamped }));\n                    setBetInputActive(false);\n                    setBetInputValue(clamped.toString());\n                  }}\n                  onChange={e => {\n                    setBetInputValue(e.target.value);\n                    const raw = parseMoneyInput(e.target.value);\n                    let clamped = Math.max(MIN_BET, Math.min(sanitizeMoney(raw), roundMoney(balance)));\n                    setGameState(prev => ({ ...prev, betAmount: clamped }));\n                  }}\n                  min={MIN_BET}\n                  step=\"0.01\"\n                  disabled={gameState.gameStatus !== 'betting'}\n                  style={{ width: 80, textAlign: 'center', margin: '0 8px' }}\n                />\n                <button onClick={() => {\n                  const plus = Math.max(MIN_BET, Math.min(roundMoney(addMoney(gameState.betAmount, 1)), roundMoney(balance)));\n                  setGameState(prev => ({ ...prev, betAmount: plus }));\n                  setBetInputValue(plus.toString());\n                }} disabled={gameState.gameStatus !== 'betting'}>+$1</button>\n                <button onClick={() => {\n                  const twice = Math.max(MIN_BET, Math.min(roundMoney(balance), sanitizeMoney(multiplyMoney(gameState.betAmount, 2))));\n                  setGameState(prev => ({ ...prev, betAmount: twice }));\n                  setBetInputValue(twice.toString());\n                }} disabled={gameState.gameStatus !== 'betting'}>2×</button>\n              </div>\n              <div className=\"blackjack-bet-controls\" style={{ marginTop: '10px' }}>\n                <button \n                  onClick={() => setGameState(prev => ({ ...prev, betAmount: Math.max(MIN_BET, roundMoney(balance)) }))}\n                  disabled={balance < MIN_BET}\n                  className=\"all-in-btn\"\n                >\n                  All In ({formatMoney(balance)})\n                </button>\n              </div>\n            </div>\n\n            {gameState.gameStatus === 'betting' && (\n              <button\n                onClick={startNewGame}\n                disabled={balance < gameState.betAmount}\n                className=\"blackjack-deal-btn\"\n              >\n                Deal ({formatMoney(gameState.betAmount)})\n              </button>\n            )}\n          </div>\n          {/* Action buttons directly below controls, left of table */}\n          {gameState.gameStatus === 'playing' && (\n            <div className=\"blackjack-actions\" style={{ width: '100%', marginTop: 18 }}>\n              {gameState.playerScore < 21 && (\n                <button onClick={hit} className=\"blackjack-action-btn\">Hit</button>\n              )}\n              <button onClick={stand} className=\"blackjack-action-btn\">Stand</button>\n              {gameState.canDouble && (\n                <button onClick={doubleDown} className=\"blackjack-action-btn\">\n                  Double ({formatMoney(gameState.betAmount)})\n                </button>\n              )}\n            </div>\n          )}\n          {gameState.gameStatus === 'finished' && (\n            <button\n              onClick={() => setGameState(prev => ({ ...prev, gameStatus: 'betting', result: '' }))}\n              className=\"blackjack-new-game-btn\"\n              style={{ marginTop: 18, width: '100%' }}\n            >\n              New Game\n            </button>\n          )}\n        </div>\n        {/* Game Table */}\n        <div className=\"blackjack-table\" style={{ flex: 1, marginLeft: 0 }}>\n          {/* Dealer */}\n          <div className=\"blackjack-dealer\">\n            <h3>Dealer {gameState.gameStatus !== 'betting' && `(${gameState.dealerScore})`}</h3>\n            <div className=\"blackjack-cards\">\n              {gameState.dealerCards.map((card, index) => (\n                <div key={index}>\n                  {renderCard(card, gameState.gameStatus === 'playing' && index === 1)}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Player */}\n          <div className=\"blackjack-player\">\n            <h3>You {gameState.gameStatus !== 'betting' && `(${gameState.playerScore})`}</h3>\n            <div className=\"blackjack-cards\">\n              {gameState.playerCards.map((card, index) => (\n                <div key={index}>\n                  {renderCard(card)}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Result */}\n          {gameState.result && (\n            <div className=\"blackjack-result\">\n              <h2 style={{ \n                color: gameState.result.includes('win') || gameState.result.includes('Blackjack') ? '#10b981' : \n                       gameState.result.includes('Push') ? '#fbbf24' : '#dc2626'\n              }}>\n                {gameState.result}\n              </h2>\n            </div>\n          )}\n\n          {/* Insurance Offer */}\n          {insuranceOffered && !insuranceResolved && (\n            <div className=\"blackjack-insurance\">\n              <span style={{ color: '#fbbf24', fontWeight: 'bold' }}>\n                Dealer shows Ace. Take insurance?\n              </span>\n              <button onClick={offerInsurance} disabled={insuranceBet > 0 || balance < roundMoney(gameState.betAmount / 2)}>\n                Insurance ({formatMoney(roundMoney(gameState.betAmount / 2))})\n              </button>\n              {insuranceBet > 0 && <span style={{ color: '#5eead4', marginLeft: 8 }}>Insurance placed!</span>}\n              <button onClick={resolveInsurance} style={{ marginLeft: 12 }}>Continue</button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlackjackGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
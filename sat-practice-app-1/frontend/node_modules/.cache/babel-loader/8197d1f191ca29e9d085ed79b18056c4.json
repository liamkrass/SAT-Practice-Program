{"ast":null,"code":"import _objectSpread from\"/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useEffect}from'react';import{typography,applyTypography,textColors}from'../styles/typography';import{formatMoney,roundMoney,addMoney,subtractMoney,multiplyMoney,parseMoneyInput,sanitizeMoney}from'../utils/money';import{saveBalance}from'../utils/balanceStorage';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MIN_BET=0.01;const BlackjackGame=_ref=>{let{onClose,balance,onEarn}=_ref;const[gameState,setGameState]=useState({playerCards:[],dealerCards:[],deck:[],gameStatus:'betting',betAmount:roundMoney(5),playerScore:0,dealerScore:0,result:'',canDouble:false,canSplit:false});const[insuranceOffered,setInsuranceOffered]=useState(false);const[insuranceBet,setInsuranceBet]=useState(0);const[insuranceResolved,setInsuranceResolved]=useState(false);useEffect(()=>{saveBalance(balance);},[balance]);const createDeck=useCallback(()=>{const suits=['♠','♥','♦','♣'];const ranks=['A','2','3','4','5','6','7','8','9','10','J','Q','K'];const deck=[];for(const suit of suits){for(const rank of ranks){let value=parseInt(rank);if(rank==='A')value=11;else if(['J','Q','K'].includes(rank))value=10;deck.push({suit,rank,value});}}// Shuffle deck\nfor(let i=deck.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[deck[i],deck[j]]=[deck[j],deck[i]];}return deck;},[]);const calculateScore=useCallback(cards=>{let score=0;let aces=0;for(const card of cards){if(card.rank==='A'){aces++;score+=11;}else{score+=card.value;}}// Convert aces from 11 to 1 if needed\nwhile(score>21&&aces>0){score-=10;aces--;}return score;},[]);const dealCard=useCallback(deck=>{const card=deck[0];const remainingDeck=deck.slice(1);return{card,remainingDeck};},[]);const startNewGame=useCallback(()=>{if(balance<gameState.betAmount)return;const newDeck=createDeck();let currentDeck=newDeck;// Deal initial cards\nconst{card:playerCard1,remainingDeck:deck1}=dealCard(currentDeck);const{card:dealerCard1,remainingDeck:deck2}=dealCard(deck1);const{card:playerCard2,remainingDeck:deck3}=dealCard(deck2);const{card:dealerCard2,remainingDeck:finalDeck}=dealCard(deck3);const playerCards=[playerCard1,playerCard2];const dealerCards=[dealerCard1,dealerCard2];const playerScore=calculateScore(playerCards);const dealerScore=calculateScore([dealerCard1]);// Deduct bet\nonEarn(roundMoney(-gameState.betAmount));// Check for blackjack\nconst playerBlackjack=playerScore===21;const dealerBlackjack=calculateScore(dealerCards)===21;let status='playing';let result='';setInsuranceOffered(false);setInsuranceBet(0);setInsuranceResolved(false);if(dealerCard1.rank==='A'&&!playerBlackjack&&!dealerBlackjack){setInsuranceOffered(true);}if(playerBlackjack&&dealerBlackjack){status='finished';result='Push! Both have blackjack';onEarn(roundMoney(gameState.betAmount));// Return bet\n}else if(playerBlackjack){status='finished';result='Blackjack! You win!';onEarn(roundMoney(multiplyMoney(gameState.betAmount,2.5)));// 3:2 payout\n}else if(dealerBlackjack){status='finished';result='Dealer blackjack. You lose.';}setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{playerCards,dealerCards,deck:finalDeck,gameStatus:status,playerScore,dealerScore,result,canDouble:playerCards.length===2&&balance>=prev.betAmount,canSplit:playerCards.length===2&&playerCard1.rank===playerCard2.rank&&balance>=prev.betAmount}));},[balance,gameState.betAmount,createDeck,dealCard,calculateScore,onEarn]);// Insurance logic\nconst offerInsurance=()=>{if(!insuranceOffered||insuranceBet>0)return;const maxInsurance=roundMoney(gameState.betAmount/2);if(balance<maxInsurance)return;setInsuranceBet(maxInsurance);onEarn(-maxInsurance);};const resolveInsurance=()=>{if(!insuranceOffered||insuranceResolved)return;setInsuranceResolved(true);const dealerBlackjack=calculateScore(gameState.dealerCards)===21;if(dealerBlackjack&&insuranceBet>0){// Insurance pays 2:1\nonEarn(roundMoney(insuranceBet*3));// get back insurance + 2x payout\n}};const stand=useCallback(()=>{if(gameState.gameStatus!=='playing')return;setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{gameStatus:'dealer'}));setTimeout(()=>{setGameState(prev=>{let dealerCards=[...prev.dealerCards];let currentDeck=[...prev.deck];let dealerScore=calculateScore(dealerCards);// Dealer hits on 16, stands on 17\nwhile(dealerScore<17){const{card,remainingDeck}=dealCard(currentDeck);dealerCards.push(card);currentDeck=remainingDeck;dealerScore=calculateScore(dealerCards);}let result='';if(dealerScore>21){result='Dealer busts! You win!';onEarn(roundMoney(prev.betAmount));// Win: return bet amount as profit (bet already deducted)\n}else if(dealerScore>prev.playerScore){result='Dealer wins.';}else if(dealerScore<prev.playerScore){result='You win!';onEarn(roundMoney(prev.betAmount));// Win: return bet amount as profit (bet already deducted)\n}else{result='Push! Tie game.';onEarn(roundMoney(prev.betAmount));// Return only the original bet (no profit)\n}return _objectSpread(_objectSpread({},prev),{},{dealerCards,deck:currentDeck,dealerScore,gameStatus:'finished',result});});},1000);},[gameState.gameStatus,dealCard,calculateScore,onEarn]);const hit=useCallback(()=>{if(gameState.gameStatus!=='playing')return;if(gameState.playerScore===21){stand();return;}const{card,remainingDeck}=dealCard(gameState.deck);const newPlayerCards=[...gameState.playerCards,card];const newScore=calculateScore(newPlayerCards);if(newScore===21){setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{playerCards:newPlayerCards,deck:remainingDeck,playerScore:newScore,canDouble:false,canSplit:false}));setTimeout(()=>stand(),100);return;}setGameState(prev=>{if(newScore>21){return _objectSpread(_objectSpread({},prev),{},{playerCards:newPlayerCards,deck:remainingDeck,playerScore:newScore,gameStatus:'finished',result:'Bust! You lose.',canDouble:false,canSplit:false});}return _objectSpread(_objectSpread({},prev),{},{playerCards:newPlayerCards,deck:remainingDeck,playerScore:newScore,canDouble:false,canSplit:false});});},[gameState,dealCard,calculateScore,stand]);const doubleDown=useCallback(()=>{if(!gameState.canDouble||balance<gameState.betAmount)return;// Double the bet\nonEarn(roundMoney(-gameState.betAmount));const{card,remainingDeck}=dealCard(gameState.deck);const newPlayerCards=[...gameState.playerCards,card];const newScore=calculateScore(newPlayerCards);setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{playerCards:newPlayerCards,deck:remainingDeck,playerScore:newScore,betAmount:roundMoney(multiplyMoney(prev.betAmount,2)),canDouble:false,canSplit:false}));if(newScore>21){setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{gameStatus:'finished',result:'Bust! You lose.'}));}else{// Automatically stand after double down\nstand();}},[gameState,balance,dealCard,calculateScore,onEarn,stand]);const renderCard=function(card){let hidden=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const isRed=card.suit==='♥'||card.suit==='♦';return/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-card \".concat(hidden?'hidden':''),children:hidden?/*#__PURE__*/_jsx(\"div\",{className:\"card-back\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"40\",height:\"60\",viewBox:\"0 0 40 60\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsx(\"rect\",{width:\"40\",height:\"60\",rx:\"4\",fill:\"#4f46e5\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"4\",y:\"4\",width:\"32\",height:\"52\",rx:\"2\",fill:\"#6366f1\",opacity:\"0.8\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"20\",cy:\"30\",r:\"8\",fill:\"white\",opacity:\"0.9\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"20\",cy:\"30\",r:\"4\",fill:\"#4f46e5\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M16 26L20 30L24 26\",stroke:\"white\",strokeWidth:\"1\",fill:\"none\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M16 34L20 30L24 34\",stroke:\"white\",strokeWidth:\"1\",fill:\"none\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-rank \".concat(isRed?'red':'black'),children:card.rank}),/*#__PURE__*/_jsx(\"div\",{className:\"card-suit \".concat(isRed?'red':'black'),children:card.suit})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-game\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{style:_objectSpread(_objectSpread({},applyTypography(typography.heading.lg)),{},{color:textColors.primary,display:'flex',alignItems:'center',gap:'12px'}),children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"32\",height:\"32\",viewBox:\"0 0 24 24\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsx(\"rect\",{x:\"3\",y:\"5\",width:\"8\",height:\"11\",rx:\"2\",fill:\"white\",stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"13\",y:\"8\",width:\"8\",height:\"11\",rx:\"2\",fill:\"white\",stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:\"7\",y:\"12\",fontSize:\"6\",fill:\"#dc2626\",textAnchor:\"middle\",fontWeight:\"bold\",children:\"A\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M6 9L7 7L8 9\",fill:\"#dc2626\",opacity:\"0.6\"}),/*#__PURE__*/_jsx(\"text\",{x:\"17\",y:\"15\",fontSize:\"6\",fill:\"#1f2937\",textAnchor:\"middle\",fontWeight:\"bold\",children:\"K\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"15\",y:\"11\",width:\"4\",height:\"2.5\",rx:\"0.5\",fill:\"#1f2937\",opacity:\"0.3\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"7\",cy:\"20\",r:\"2\",fill:\"#059669\",stroke:\"#047857\",strokeWidth:\"0.5\"}),/*#__PURE__*/_jsx(\"circle\",{cx:\"17\",cy:\"20\",r:\"2\",fill:\"#dc2626\",stroke:\"#991b1b\",strokeWidth:\"0.5\"})]}),\"Blackjack\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"blackjack-close-btn\",children:\"\\u2190\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-content\",style:{display:'flex',flexDirection:'row',gap:30,padding:30},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'flex-start',minWidth:300},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-controls\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-balance\",children:/*#__PURE__*/_jsxs(\"span\",{style:{color:'#5eead4',fontWeight:'bold'},children:[\"Balance: \",formatMoney(balance)]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-bet-section\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Bet Amount\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-bet-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{betAmount:roundMoney(Math.max(MIN_BET,subtractMoney(prev.betAmount,1)))})),children:\"-$1\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:gameState.betAmount,onChange:e=>{const raw=parseMoneyInput(e.target.value);let clamped=Math.max(MIN_BET,Math.min(sanitizeMoney(raw),roundMoney(balance)));setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{betAmount:clamped}));},min:MIN_BET,step:\"0.01\",style:{width:80,textAlign:'center',margin:'0 8px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{betAmount:Math.max(MIN_BET,Math.min(roundMoney(addMoney(prev.betAmount,1)),roundMoney(balance)))})),children:\"+$1\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-bet-controls\",style:{marginTop:'10px'},children:/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{betAmount:Math.max(MIN_BET,roundMoney(balance))})),disabled:balance<MIN_BET,className:\"all-in-btn\",children:[\"All In (\",formatMoney(balance),\")\"]})})]}),gameState.gameStatus==='betting'&&/*#__PURE__*/_jsxs(\"button\",{onClick:startNewGame,disabled:balance<gameState.betAmount,className:\"blackjack-deal-btn\",children:[\"Deal (\",formatMoney(gameState.betAmount),\")\"]})]}),gameState.gameStatus==='playing'&&/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-actions\",style:{width:'100%',marginTop:18},children:[gameState.playerScore<21&&/*#__PURE__*/_jsx(\"button\",{onClick:hit,className:\"blackjack-action-btn\",children:\"Hit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stand,className:\"blackjack-action-btn\",children:\"Stand\"}),gameState.canDouble&&/*#__PURE__*/_jsxs(\"button\",{onClick:doubleDown,className:\"blackjack-action-btn\",children:[\"Double (\",formatMoney(gameState.betAmount),\")\"]})]}),gameState.gameStatus==='finished'&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setGameState(prev=>_objectSpread(_objectSpread({},prev),{},{gameStatus:'betting',result:''})),className:\"blackjack-new-game-btn\",style:{marginTop:18,width:'100%'},children:\"New Game\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-table\",style:{flex:1,marginLeft:0},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-dealer\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"Dealer \",gameState.gameStatus!=='betting'&&\"(\".concat(gameState.dealerScore,\")\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-cards\",children:gameState.dealerCards.map((card,index)=>/*#__PURE__*/_jsx(\"div\",{children:renderCard(card,gameState.gameStatus==='playing'&&index===1)},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-player\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"You \",gameState.gameStatus!=='betting'&&\"(\".concat(gameState.playerScore,\")\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-cards\",children:gameState.playerCards.map((card,index)=>/*#__PURE__*/_jsx(\"div\",{children:renderCard(card)},index))})]}),gameState.result&&/*#__PURE__*/_jsx(\"div\",{className:\"blackjack-result\",children:/*#__PURE__*/_jsx(\"h2\",{style:{color:gameState.result.includes('win')||gameState.result.includes('Blackjack')?'#10b981':gameState.result.includes('Push')?'#fbbf24':'#dc2626'},children:gameState.result})}),insuranceOffered&&!insuranceResolved&&/*#__PURE__*/_jsxs(\"div\",{className:\"blackjack-insurance\",children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'#fbbf24',fontWeight:'bold'},children:\"Dealer shows Ace. Take insurance?\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:offerInsurance,disabled:insuranceBet>0||balance<roundMoney(gameState.betAmount/2),children:[\"Insurance (\",formatMoney(roundMoney(gameState.betAmount/2)),\")\"]}),insuranceBet>0&&/*#__PURE__*/_jsx(\"span\",{style:{color:'#5eead4',marginLeft:8},children:\"Insurance placed!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resolveInsurance,style:{marginLeft:12},children:\"Continue\"})]})]})]})]});};export default BlackjackGame;","map":null,"metadata":{},"sourceType":"module"}
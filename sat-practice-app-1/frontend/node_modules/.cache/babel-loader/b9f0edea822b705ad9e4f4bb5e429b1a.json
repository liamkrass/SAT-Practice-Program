{"ast":null,"code":"// Utility for persistent balance storage in localStorage\n\nconst BALANCE_KEY = 'satAppBalance';\nexport function getSavedBalance() {\n  const raw = localStorage.getItem(BALANCE_KEY);\n  if (!raw) return 0;\n  const parsed = parseFloat(raw);\n  return isNaN(parsed) ? 0 : parsed;\n}\nexport function saveBalance(balance) {\n  localStorage.setItem(BALANCE_KEY, balance.toString());\n}\nexport function clearBalance() {\n  localStorage.removeItem(BALANCE_KEY);\n}","map":{"version":3,"names":["BALANCE_KEY","getSavedBalance","raw","localStorage","getItem","parsed","parseFloat","isNaN","saveBalance","balance","setItem","toString","clearBalance","removeItem"],"sources":["/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/utils/balanceStorage.ts"],"sourcesContent":["// Utility for persistent balance storage in localStorage\n\nconst BALANCE_KEY = 'satAppBalance';\n\nexport function getSavedBalance(): number {\n  const raw = localStorage.getItem(BALANCE_KEY);\n  if (!raw) return 0;\n  const parsed = parseFloat(raw);\n  return isNaN(parsed) ? 0 : parsed;\n}\n\nexport function saveBalance(balance: number) {\n  localStorage.setItem(BALANCE_KEY, balance.toString());\n}\n\nexport function clearBalance() {\n  localStorage.removeItem(BALANCE_KEY);\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG,eAAe;AAEnC,OAAO,SAASC,eAAeA,CAAA,EAAW;EACxC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACJ,WAAW,CAAC;EAC7C,IAAI,CAACE,GAAG,EAAE,OAAO,CAAC;EAClB,MAAMG,MAAM,GAAGC,UAAU,CAACJ,GAAG,CAAC;EAC9B,OAAOK,KAAK,CAACF,MAAM,CAAC,GAAG,CAAC,GAAGA,MAAM;AACnC;AAEA,OAAO,SAASG,WAAWA,CAACC,OAAe,EAAE;EAC3CN,YAAY,CAACO,OAAO,CAACV,WAAW,EAAES,OAAO,CAACE,QAAQ,CAAC,CAAC,CAAC;AACvD;AAEA,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7BT,YAAY,CAACU,UAAU,CAACb,WAAW,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module"}
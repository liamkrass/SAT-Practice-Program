{"ast":null,"code":"// Utility for tracking answered questions and progress in localStorage\n\nexport const getAnsweredQuestions = () => {\n  // Legacy format support\n  const data = localStorage.getItem('answeredQuestions');\n  return data ? JSON.parse(data) : [];\n};\nexport const getAnsweredQuestionsDetailed = () => {\n  const data = localStorage.getItem('answeredQuestionsDetailed');\n  return data ? JSON.parse(data) : [];\n};\nexport const getAnsweredQuestionsMap = () => {\n  const detailed = getAnsweredQuestionsDetailed();\n  const map = {};\n  detailed.forEach(item => {\n    map[item.id] = item.answer;\n  });\n  return map;\n};\nexport const saveAnsweredQuestion = (id, answer) => {\n  console.log(`saveAnsweredQuestion called: id=\"${id}\", answer=\"${answer}\"`);\n\n  // Save to legacy format for backward compatibility\n  const answered = getAnsweredQuestions();\n  if (!answered.includes(id)) {\n    answered.push(id);\n    localStorage.setItem('answeredQuestions', JSON.stringify(answered));\n    console.log(`Added to legacy format. New count: ${answered.length}`);\n  } else {\n    console.log(`Already in legacy format. Count remains: ${answered.length}`);\n  }\n\n  // Save to detailed format for performance tracking\n  if (answer) {\n    const detailed = getAnsweredQuestionsDetailed();\n    const existing = detailed.findIndex(item => item.id === id);\n    const newItem = {\n      id,\n      answer,\n      timestamp: Date.now()\n    };\n    if (existing >= 0) {\n      console.log(`Updating existing entry at index ${existing}:`, detailed[existing], '->', newItem);\n      detailed[existing] = newItem;\n    } else {\n      console.log(`Adding new entry:`, newItem);\n      detailed.push(newItem);\n    }\n    localStorage.setItem('answeredQuestionsDetailed', JSON.stringify(detailed));\n    console.log(`Detailed storage updated. New count: ${detailed.length}`);\n\n    // Verify what we just saved\n    const saved = JSON.parse(localStorage.getItem('answeredQuestionsDetailed') || '[]');\n    console.log(`Verification - actually saved ${saved.length} items:`, saved.map(item => `${item.id}=\"${item.answer}\"`));\n  }\n};\nexport const clearProgress = () => {\n  localStorage.removeItem('answeredQuestions');\n  localStorage.removeItem('answeredQuestionsDetailed');\n  console.log('Progress cleared: removed both answeredQuestions and answeredQuestionsDetailed');\n};\nexport const debugProgress = () => {\n  console.log('=== PROGRESS STORAGE DEBUG ===');\n  const legacy = localStorage.getItem('answeredQuestions');\n  const detailed = localStorage.getItem('answeredQuestionsDetailed');\n  console.log('Legacy storage raw:', legacy);\n  console.log('Detailed storage raw:', detailed);\n  if (legacy) {\n    try {\n      const legacyParsed = JSON.parse(legacy);\n      console.log('Legacy parsed:', legacyParsed);\n      console.log('Legacy count:', legacyParsed.length);\n    } catch (e) {\n      console.error('Error parsing legacy:', e);\n    }\n  }\n  if (detailed) {\n    try {\n      const detailedParsed = JSON.parse(detailed);\n      console.log('Detailed parsed:', detailedParsed);\n      console.log('Detailed count:', detailedParsed.length);\n    } catch (e) {\n      console.error('Error parsing detailed:', e);\n    }\n  }\n  const map = getAnsweredQuestionsMap();\n  console.log('Generated map:', map);\n  console.log('Map keys count:', Object.keys(map).length);\n  return {\n    legacy,\n    detailed,\n    map\n  };\n};","map":{"version":3,"names":["getAnsweredQuestions","data","localStorage","getItem","JSON","parse","getAnsweredQuestionsDetailed","getAnsweredQuestionsMap","detailed","map","forEach","item","id","answer","saveAnsweredQuestion","console","log","answered","includes","push","setItem","stringify","length","existing","findIndex","newItem","timestamp","Date","now","saved","clearProgress","removeItem","debugProgress","legacy","legacyParsed","e","error","detailedParsed","Object","keys"],"sources":["/Users/liamkrass/Documents/satProjectV2/sat-practice-app-1/frontend/src/utils/progressStorage.ts"],"sourcesContent":["// Utility for tracking answered questions and progress in localStorage\n\ninterface AnsweredQuestion {\n  id: string;\n  answer: string;\n  timestamp: number;\n}\n\nexport const getAnsweredQuestions = (): string[] => {\n  // Legacy format support\n  const data = localStorage.getItem('answeredQuestions');\n  return data ? JSON.parse(data) : [];\n};\n\nexport const getAnsweredQuestionsDetailed = (): AnsweredQuestion[] => {\n  const data = localStorage.getItem('answeredQuestionsDetailed');\n  return data ? JSON.parse(data) : [];\n};\n\nexport const getAnsweredQuestionsMap = (): { [id: string]: string } => {\n  const detailed = getAnsweredQuestionsDetailed();\n  const map: { [id: string]: string } = {};\n  detailed.forEach(item => {\n    map[item.id] = item.answer;\n  });\n  return map;\n};\n\nexport const saveAnsweredQuestion = (id: string, answer?: string) => {\n  console.log(`saveAnsweredQuestion called: id=\"${id}\", answer=\"${answer}\"`);\n  \n  // Save to legacy format for backward compatibility\n  const answered = getAnsweredQuestions();\n  if (!answered.includes(id)) {\n    answered.push(id);\n    localStorage.setItem('answeredQuestions', JSON.stringify(answered));\n    console.log(`Added to legacy format. New count: ${answered.length}`);\n  } else {\n    console.log(`Already in legacy format. Count remains: ${answered.length}`);\n  }\n  \n  // Save to detailed format for performance tracking\n  if (answer) {\n    const detailed = getAnsweredQuestionsDetailed();\n    const existing = detailed.findIndex(item => item.id === id);\n    const newItem: AnsweredQuestion = {\n      id,\n      answer,\n      timestamp: Date.now()\n    };\n    \n    if (existing >= 0) {\n      console.log(`Updating existing entry at index ${existing}:`, detailed[existing], '->', newItem);\n      detailed[existing] = newItem;\n    } else {\n      console.log(`Adding new entry:`, newItem);\n      detailed.push(newItem);\n    }\n    \n    localStorage.setItem('answeredQuestionsDetailed', JSON.stringify(detailed));\n    console.log(`Detailed storage updated. New count: ${detailed.length}`);\n    \n    // Verify what we just saved\n    const saved = JSON.parse(localStorage.getItem('answeredQuestionsDetailed') || '[]');\n    console.log(`Verification - actually saved ${saved.length} items:`, saved.map((item: AnsweredQuestion) => `${item.id}=\"${item.answer}\"`));\n  }\n};\n\nexport const clearProgress = () => {\n  localStorage.removeItem('answeredQuestions');\n  localStorage.removeItem('answeredQuestionsDetailed');\n  console.log('Progress cleared: removed both answeredQuestions and answeredQuestionsDetailed');\n};\n\nexport const debugProgress = () => {\n  console.log('=== PROGRESS STORAGE DEBUG ===');\n  const legacy = localStorage.getItem('answeredQuestions');\n  const detailed = localStorage.getItem('answeredQuestionsDetailed');\n  \n  console.log('Legacy storage raw:', legacy);\n  console.log('Detailed storage raw:', detailed);\n  \n  if (legacy) {\n    try {\n      const legacyParsed = JSON.parse(legacy);\n      console.log('Legacy parsed:', legacyParsed);\n      console.log('Legacy count:', legacyParsed.length);\n    } catch (e) {\n      console.error('Error parsing legacy:', e);\n    }\n  }\n  \n  if (detailed) {\n    try {\n      const detailedParsed = JSON.parse(detailed);\n      console.log('Detailed parsed:', detailedParsed);\n      console.log('Detailed count:', detailedParsed.length);\n    } catch (e) {\n      console.error('Error parsing detailed:', e);\n    }\n  }\n  \n  const map = getAnsweredQuestionsMap();\n  console.log('Generated map:', map);\n  console.log('Map keys count:', Object.keys(map).length);\n  \n  return { legacy, detailed, map };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}